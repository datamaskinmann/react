[{"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\index.js":"1","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\App.js":"2","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\store.js":"3","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\history.js":"5","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\PrivateRoute.js":"6","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\ChargerMapPage.js":"7","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\ChargerPage.js":"8","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\LoginPage.js":"9","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegistrationPage.js":"10","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\VerifyEmailPage.js":"11","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegisterChargerMapPage.js":"12","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegisterChargerPage.js":"13","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\rootReducer.js":"14","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Charger.js":"15","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\userActions.js":"16","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Map.js":"17","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\AddressSelectorMarker.js":"18","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\AddressSearchBar.js":"19","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\fetchChargersService.js":"20","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\fetchSessionService.js":"21","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\user\\userService.js":"22","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\geo\\geoService.js":"23","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\math\\vectordistance.js":"24","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\userReducer.js":"25","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ChargerButton.js":"26","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\stopChargingService.js":"27","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\startChargingService.js":"28","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\TimeSelector.js":"29","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\user\\auth-header.js":"30","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\misc\\constants.js":"31","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\misc\\leafletIcons.js":"32","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\http\\http.js":"33","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\checkChargerStateService.js":"34","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\time\\timeService.js":"35","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ChargerMarker.js":"36","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\getChargerOperatingMode.js":"37","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\sessionActions.js":"38","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ErrorBox.js":"39","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\mapActions.js":"40","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\sessionReducer.js":"41","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\mapReducer.js":"42","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Overlay.js":"43","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ConfirmOverlay.js":"44","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\postPendingSession.js":"45","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\getPendingSession.js":"46","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\operatingModePollingService.js":"47","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\StartChargerOverlay.js":"48","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\TIMESELECTOR-DEPRECATED.js":"49","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\math\\roundToNearest5.js":"50","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\OkOverlay.js":"51","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\HamburgerMenu.js":"52","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\SideNavbar.js":"53"},{"size":406,"mtime":1627934506457,"results":"54","hashOfConfig":"55"},{"size":1935,"mtime":1629854069688,"results":"56","hashOfConfig":"55"},{"size":453,"mtime":1628265369425,"results":"57","hashOfConfig":"55"},{"size":1216,"mtime":1629855229900,"results":"58","hashOfConfig":"55"},{"size":243,"mtime":1628265369403,"results":"59","hashOfConfig":"55"},{"size":1166,"mtime":1628091296653,"results":"60","hashOfConfig":"55"},{"size":4081,"mtime":1628872579120,"results":"61","hashOfConfig":"55"},{"size":774,"mtime":1629826574004,"results":"62","hashOfConfig":"55"},{"size":3834,"mtime":1628265369406,"results":"63","hashOfConfig":"55"},{"size":4587,"mtime":1628265369409,"results":"64","hashOfConfig":"55"},{"size":692,"mtime":1628091296675,"results":"65","hashOfConfig":"55"},{"size":6229,"mtime":1628803749602,"results":"66","hashOfConfig":"55"},{"size":2087,"mtime":1628265369408,"results":"67","hashOfConfig":"55"},{"size":864,"mtime":1628622183717,"results":"68","hashOfConfig":"55"},{"size":2631,"mtime":1628808787251,"results":"69","hashOfConfig":"55"},{"size":3237,"mtime":1628091296647,"results":"70","hashOfConfig":"55"},{"size":5874,"mtime":1629826574000,"results":"71","hashOfConfig":"55"},{"size":1547,"mtime":1628265369391,"results":"72","hashOfConfig":"55"},{"size":628,"mtime":1628265369388,"results":"73","hashOfConfig":"55"},{"size":469,"mtime":1628803860642,"results":"74","hashOfConfig":"55"},{"size":575,"mtime":1628803860657,"results":"75","hashOfConfig":"55"},{"size":3280,"mtime":1628265369424,"results":"76","hashOfConfig":"55"},{"size":1048,"mtime":1628803860627,"results":"77","hashOfConfig":"55"},{"size":330,"mtime":1628265369421,"results":"78","hashOfConfig":"55"},{"size":4438,"mtime":1628091296678,"results":"79","hashOfConfig":"55"},{"size":2718,"mtime":1629841080076,"results":"80","hashOfConfig":"55"},{"size":492,"mtime":1628803860586,"results":"81","hashOfConfig":"55"},{"size":581,"mtime":1628897601965,"results":"82","hashOfConfig":"55"},{"size":4553,"mtime":1628893320664,"results":"83","hashOfConfig":"55"},{"size":419,"mtime":1628265369422,"results":"84","hashOfConfig":"55"},{"size":1318,"mtime":1629826574003,"results":"85","hashOfConfig":"55"},{"size":847,"mtime":1628872579118,"results":"86","hashOfConfig":"55"},{"size":2432,"mtime":1628803970511,"results":"87","hashOfConfig":"55"},{"size":544,"mtime":1628803860620,"results":"88","hashOfConfig":"55"},{"size":2121,"mtime":1628874258535,"results":"89","hashOfConfig":"55"},{"size":5139,"mtime":1629826573999,"results":"90","hashOfConfig":"55"},{"size":461,"mtime":1628803860633,"results":"91","hashOfConfig":"55"},{"size":1472,"mtime":1628807252336,"results":"92","hashOfConfig":"55"},{"size":608,"mtime":1628265369399,"results":"93","hashOfConfig":"55"},{"size":942,"mtime":1628802925934,"results":"94","hashOfConfig":"55"},{"size":3079,"mtime":1628807579480,"results":"95","hashOfConfig":"55"},{"size":1304,"mtime":1628265369412,"results":"96","hashOfConfig":"55"},{"size":225,"mtime":1628622911134,"results":"97","hashOfConfig":"55"},{"size":970,"mtime":1628808412107,"results":"98","hashOfConfig":"55"},{"size":354,"mtime":1628807060185,"results":"99","hashOfConfig":"55"},{"size":322,"mtime":1628803860613,"results":"100","hashOfConfig":"55"},{"size":1038,"mtime":1628498123339,"results":"101","hashOfConfig":"55"},{"size":2179,"mtime":1629840658608,"results":"102","hashOfConfig":"55"},{"size":1712,"mtime":1628808787264,"results":"103","hashOfConfig":"55"},{"size":100,"mtime":1628811866216,"results":"104","hashOfConfig":"55"},{"size":590,"mtime":1629826574001,"results":"105","hashOfConfig":"55"},{"size":451,"mtime":1629856043837,"results":"106","hashOfConfig":"55"},{"size":188,"mtime":1629855929537,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"svy2qb",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\index.js",[],["233","234"],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\App.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\store.js",["235"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n/**\r\n * @author Magnus\r\n * @version 06/08/2021\r\n * Allows application to keep sentralized state.\r\n */\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Header.js",["236","237"],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\history.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\PrivateRoute.js",["238"],"import {Redirect, Route} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {authUser} from \"../actions/userActions\";\r\n\r\n/**\r\n * Komponent som muliggjør implementering av beskyttet Route\r\n * Er enten tom komponent (isLoading), beskyttet komponent (isAuthorized)\r\n * eller en redirect til /login (!isAuthorized).\r\n * @param component - komponent som skal beskyttes\r\n * @param ...rest - resten av propsene til komponenten\r\n * @param auth - state fra userReducer\r\n * @component\r\n * @author Magnus\r\n */\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(authUser());\r\n    }, []);\r\n\r\n    if (auth.isLoading) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n    return (\r\n        <Route {...rest} render={(props) => {\r\n            return (auth.isAuthenticated) ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\ChargerMapPage.js",["239","240","241","242","243","244","245","246"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\n\r\nimport history from \"../history\";\r\n\r\nimport {getSession} from \"../actions/sessionActions\";\r\nimport {getAllChargers} from \"../actions/mapActions\";\r\n\r\nimport Map from \"../components/Map\";\r\nimport ErrorBox from \"../components/ErrorBox\";\r\n\r\nimport '../stylesheets/ChargerMapPage.css';\r\nimport {StartCharger} from \"../services/charger/startChargingService\";\r\nimport {doPostAsync} from \"../services/http/http\";\r\nimport postPendingSession from \"../services/charger/postPendingSession\";\r\nimport getPendingSession from \"../services/charger/getPendingSession\";\r\nimport Overlay from \"../components/Overlay\";\r\nimport StartChargerOverlay from \"../components/StartChargerOverlay\";\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * @version 06/08/2021\r\n * Page with Map-component.\r\n * Allows user to navigate a map and view chargers + availability status\r\n * Displays whether user has an active charging session.\r\n * @param props\r\n * @component\r\n */\r\nconst ChargerMapPage = (props) => {\r\n    const session = props.session;\r\n    const mapError = props.map.fetchError;\r\n    const sessionError = props.session.fetchError;\r\n    const chargers = props.map.chargers;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     * Async function that dispatches actions for getting all chargers\r\n     * and the users current session.\r\n     * @returns void\r\n     * @memberOf ChargerMapPage\r\n     */\r\n    const onLoad = async () => {\r\n        await dispatch(getAllChargers());\r\n        await dispatch(getSession());\r\n    };\r\n\r\n    const [overlay, setOverlay] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        if (!(props.map.isLoading || props.session.isLoading)) {\r\n            onLoad();\r\n        }\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, []);\r\n\r\n    /**\r\n     * Sends the user to current active charger.\r\n     * @returns void\r\n     * @memberOf ChargerMapPage\r\n     */\r\n    const handleClick = () => {\r\n        history.push(`/charger/${session.session.chargerID}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"scopeContent\">\r\n            {overlay}\r\n            <div className=\"box\">\r\n                <Map session={session} chargers={chargers}/>\r\n                {sessionError || mapError ?\r\n                    <ErrorBox error=\"Nettverksfeil. Trykk på knappen for å laste inn på nytt.\"\r\n                              handleClick={() => onLoad()}/> : null}\r\n                <div className=\"mapNavBar\">\r\n                    {session.session && session.isActive ?\r\n                        <button className=\"sessionButton\"\r\n                                onClick={() => handleClick()}>\r\n                            <h4>Lader ved<br/>{session.session.address}</h4>\r\n                        </button>\r\n                        :\r\n                        session.session && session.isPending ?\r\n\r\n                            <button style={{backgroundColor: \"#EAC43D\"}} className=\"sessionButton\" onClick={() => {\r\n                                setOverlay(<StartChargerOverlay\r\n                                    chargerId={session.session.chargerID}\r\n                                        address={session.session.address}\r\n                                        onClickClose={() => setOverlay(null)}\r\n                                    />\r\n                                );\r\n                            }}>\r\n                                <h4>Start lading ved<br/>{session.session.address}</h4>\r\n                            </button>\r\n                            :\r\n                            <div className=\"info\">\r\n                                <h4>Velg en ledig lader på kartet</h4>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        session: state.session,\r\n        map: state.map,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default (connect)(mapStateToProps)(ChargerMapPage);","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\ChargerPage.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\LoginPage.js",["247"],"import React, {useEffect} from 'react';\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {ErrorMessage} from \"@hookform/error-message\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nimport {authUser, loginUser} from \"../actions/userActions\";\r\n\r\nimport '../stylesheets/Form&Input&Select.css'\r\nimport '../stylesheets/LoginPage.css'\r\n\r\n/**\r\n * @author Magnus & Håkon\r\n * @version 06/08/2021\r\n * Login side for innlogging i applikasjonen.\r\n * Ved riktig login hentes JWT og brukerID og legges inn i localstorage\r\n * Ved feil i brukernavn/passord eller andre feil vises passende feilmelding\r\n * @param props\r\n * @component\r\n */\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const {register, handleSubmit, setError, formState: {errors}} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (props.auth.loginError) {\r\n            if (props.auth.loginError.response) {\r\n                setError(\"password\", {\r\n                    type: \"validate user\",\r\n                    message: `Feil e-mail eller passord`\r\n                });\r\n            } else if (props.auth.loginError.request) {\r\n                setError(\"password\", {\r\n                    type: \"validate email\",\r\n                    message: `Nettverksfeil. Sjekk din tilkobling og prøv igjen`\r\n                });\r\n            } else {\r\n                setError(\"password\", {\r\n                    type: \"validate email\",\r\n                    message: `Nettverksfeil. Sjekk din tilkobling og prøv igjen`\r\n                });\r\n            }\r\n        }\r\n\r\n    }, [props.auth.loginError]);\r\n\r\n    /**\r\n     * Metode for å håndtere trykk på submit.\r\n     * Passerer data til loginUser\r\n     * Forsøker å autorisere bruker etterpå\r\n     * @param data - data fra login-skjema\r\n     * @param e - event (at knappen trykkes på). PreventDefault forhindrer rerendering av siden.\r\n     * @return void\r\n     * @memberOf LoginPage\r\n     */\r\n\r\n    const onSubmit = async (data, e) => {\r\n        const user = {\r\n            email: data.email,\r\n            pwd: data.password\r\n        }\r\n        e.preventDefault();\r\n        await dispatch(loginUser(user));\r\n        await dispatch(authUser());\r\n    }\r\n    if (props.auth.isAuthenticated) {\r\n        authUser();\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"formBox\">\r\n            <h3>Logg inn</h3>\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input className=\"loginField\"\r\n                       placeholder=\"E-mail\" {...register(\"email\", {required: \"Vennlist inntast e-mailadresse\"})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({message}) => <p>{message}</p>}/>\r\n                </div>\r\n                <input className=\"loginField\" type=\"password\"\r\n                       placeholder=\"Passord\" {...register(\"password\", {required: \"Vennligst inntast passord\"})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"password\" render={({message}) => <p>{message}</p>}/>\r\n                </div>\r\n                <button className=\"button\" type=\"submit\"> LOGG INN</button>\r\n            </form>\r\n            <div className=\"column\">\r\n                <Link to=\"/password_reset\">\r\n                    <h5 className=\"link\">Glemt passord?</h5>\r\n                </Link>\r\n                    <Link to=\"/registration\">\r\n                        <h5 className=\"link\">Ikke registrert bruker? Opprett bruker her!</h5>\r\n                    </Link>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginPage);","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegistrationPage.js",["248","249"],"import React, {useEffect} from 'react';\r\nimport {Link, Redirect, useHistory} from 'react-router-dom';\r\nimport {useForm} from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport {authUser, registerUser} from \"../actions/userActions\";\r\n\r\nimport '../stylesheets/Form&Input&Select.css'\r\n\r\n/**\r\n * Side for registrering av brukere\r\n * Ved riktig registrering\r\n * @param props\r\n * @component\r\n * @author Magnus & Håkon\r\n */\r\nconst RegistrationPage = (props) =>  {\r\n\r\n    const { register, setError, formState: { errors }, handleSubmit, getValues } = useForm();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (props.auth.registerError) {\r\n            if (props.auth.registerError.response) {\r\n                setError(\"email\", {\r\n                    type: \"validate user\",\r\n                    message: \"E-mail allerede i bruk\"\r\n                })\r\n            } else {\r\n                setError(\"email\", {\r\n                    type: \"connection\",\r\n                    message: \"Nettverksfeil. Sjekk din tilkobling og prøv på nytt\"\r\n                })\r\n            }\r\n        }\r\n    }, [props.auth.registerError]);\r\n\r\n    /**\r\n     * Metode for å ta data fra form og passere inn i postUser\r\n     * @param data - brukerdata fra form\r\n     * @return void\r\n     * @memberOf RegistrationPage\r\n     */\r\n\r\n    const onSubmit = async (data, e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            name: data.firstName + data.lastName,\r\n            email: data.email,\r\n            pwd: data.password,\r\n            cellNum: 5,\r\n            pid: null,\r\n            isHost: false\r\n        }\r\n        await dispatch(registerUser(user));\r\n        if (!props.auth.registerError) {\r\n            history.push(\"/login\");\r\n        }\r\n\r\n    }\r\n\r\n    if (props.auth.isAuthenticated) {\r\n        authUser();\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"formBox\">\r\n            <h3>Registrer deg</h3>\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input placeholder=\"Fornavn\" {...register(\"firstName\", { required: \"Fornavn påkrevd\", pattern: {value: /^[ÆØÅA-Z]+[æøåa-z]$/i, message: \"Oppfyller ikke krav\"} })} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"firstName\" render={({ message }) => <p>{message}</p>}/>\r\n                </div>\r\n                <input placeholder=\"Etternavn\" {...register(\"lastName\", { required: \"Etternavn påkrevd\", pattern: {value: /^[ÆØÅA-Zæøåa-z]+$/i, message: \"Oppfyller ikke krav\" }})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"lastName\" render={({ message }) => <p>{message}</p>}/>\r\n                </div>\r\n                <input placeholder=\"E-mail\" {...register(\"email\", {required: \"E-postadresse påkrevd\", pattern: {value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i, message: \"Oppfyller ikke krav\"}})}/>\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({ message }) => <p>{message}</p>}/>\r\n                </div>\r\n                <input type=\"password\" placeholder=\"Passord\" {...register(\"password\", {required: \"Passord må være minst 8 tegn langt\", minLength: {value: 8, message: \"Passord må være minst 8 tegn langt\"} })} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"password\" render={({ message }) => <p>{message}</p>}/>\r\n                </div>\r\n                <input type=\"password\" placeholder=\"Gjenta passord\" {...register(\"cpassword\", {required: \"Passordene må være like\", validate: { passEqual: val => (val === getValues().password) ||  \"Passordene må være like\"}})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"cpassword\" render={({ message }) => <p>{message}</p>}/>\r\n                </div>\r\n                <button className=\"button\" type=\"submit\"> REGISTRER </button>\r\n                <div className=\"column\">\r\n                    <Link to=\"/login\" >\r\n                        <h5>Allerede bruker? Logg inn her!</h5>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegistrationPage);","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\VerifyEmailPage.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegisterChargerMapPage.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\pages\\RegisterChargerPage.js",["250","251"],"import React, {useState} from \"react\";\r\n\r\nimport '../stylesheets/Icons.css'\r\nimport '../stylesheets/Form&Input&Select.css'\r\n\r\n/**\r\n * @author Sven\r\n * @version 06/08/2021\r\n * When address is found from RegisterChargerMapPage.js, it redirects to this page\r\n * @component\r\n */\r\nconst RegisterChargerPage = (props) => {\r\n\r\n    const [chargerType, setChargerType] = useState(null);\r\n    const [chargerStatus, setChargerStatus] = useState(null);\r\n\r\n    return (\r\n        <div className=\"formBox\">\r\n            <h3>Registrer en lader</h3>\r\n            <form className=\"form\" onSubmit={() => console.log(\"Yo\")}>\r\n                <div className=\"inputContainer\">\r\n                    <input onBlur={() => {\r\n                        setChargerStatus(\"loading\");\r\n                    }} type=\"text\" placeholder=\"Addresse\"/>\r\n                    {chargerStatus != null ?\r\n                        <span className={chargerStatus} style={{height: \"16px\", width: \"16px\",\r\n                            transform: \"translate(-100%)\"}}/> : null}\r\n\r\n                </div>\r\n                <div className=\"inputContainer\">\r\n                    <select onChange={(e) =>\r\n                        setChargerType(e.target.value)} name=\"chargerType\">\r\n                        <option value=\"\" disabled selected>Lader type</option>\r\n                        <option value=\"easee\">\r\n                            Easee\r\n                        </option>\r\n                        <option value=\"zaptec\">\r\n                            Zaptec\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Laderens id\"/>\r\n                {chargerType == \"zaptec\" ?\r\n                    <input type=\"text\" placeholder=\"Zaptec brukernavn\"/> : null}\r\n                {chargerType == \"zaptec\" ?\r\n                    <input type=\"password\" placeholder=\"Zaptec password\"/> : null}\r\n                <button className=\"button\" type=\"submit\">Registrer laderen</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterChargerPage;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\rootReducer.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Charger.js",["252","253"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport '../stylesheets/Charger.css'\r\nimport ChargerButton from '../components/ChargerButton';\r\nimport TIMESELECTORDEPRECATED from './TIMESELECTOR-DEPRECATED';\r\n\r\nimport {StopCharger} from \"../services/charger/stopChargingService\";\r\nimport { invokePoll, pollNew } from \"../services/charger/operatingModePollingService\";\r\nimport {startCharger} from \"../services/charger/startChargingService\";\r\n\r\n/**\r\n *\r\n * @author Magnus & Sven\r\n * Component which represents a charger and makes it possible to interact with it.\r\n *\r\n * @component\r\n */\r\n\r\nconst Charger = (props) => {\r\n\r\n    const [getTime, setGetTime] = useState(false);\r\n    const [time, setTime] = useState(new Date());\r\n\r\n    const [chargingState, setChargingState] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            pollNew(props.chargerId, (e) => setChargingState(e));\r\n        }\r\n\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        switch (chargingState) {\r\n\r\n        }\r\n    }, [chargingState]);\r\n\r\n    /**\r\n     * Handles click from ChargerButton\r\n     *  - Checks charger state\r\n     *  - Starts the charger if the charger is in state 2\r\n     *  - Stops the charger if it is in state 3\r\n     *\r\n     * @returns {void}\r\n     * @memberOf Charger\r\n     */\r\n\r\n    const handleClick = () => {\r\n        switch (chargingState) {\r\n            case 2:\r\n                setGetTime(true);\r\n                startCharger(props.chargerId).then(() => { // send Time with request to reservere until {time}\r\n                    invokePoll();\r\n                });\r\n                setGetTime(false);\r\n                break;\r\n            case 3:\r\n                StopCharger(props.chargerId).then(() => {\r\n                    invokePoll();\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"boxContent\">\r\n                <h2 className=\"laddelGreen\"> {props.name} </h2>\r\n                <h3 className=\"laddelGreen\"> {props.owner}s lader</h3>\r\n\r\n                <h3>Reserver til</h3>\r\n                <TIMESELECTORDEPRECATED now={new Date()} interval={4}\r\n                                        getTime={getTime}\r\n                                        setTime={() => setTime(time)}/>\r\n\r\n                <ChargerButton onClick={handleClick}\r\n                               chargingState={chargingState}/>\r\n                <div className=\"filler\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charger","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Map.js",["254","255","256","257"],"import React, {useEffect, useState} from 'react';\r\nimport {MapConsumer, MapContainer, TileLayer} from 'react-leaflet';\r\n\r\nimport {Geolocation} from \"../services/geo/geoService\";\r\n\r\nimport ChargerMarker from \"./ChargerMarker\";\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport '../stylesheets/Map.css';\r\nimport ConfirmOverlay from \"./ConfirmOverlay\";\r\nimport Overlay from \"./Overlay\";\r\nimport postPendingSession from \"../services/charger/postPendingSession\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getSession} from \"../actions/sessionActions\";\r\nimport {dateToHHMM, UTCToLocalTime} from \"../services/time/timeService\";\r\nimport StartChargerOverlay from \"./StartChargerOverlay\";\r\nimport ErrorBox from \"./ErrorBox\";\r\nimport OkOverlay from \"./OkOverlay\";\r\n\r\nDate.prototype.addHours = function (h) {\r\n    this.setTime(this.getTime() + (h * 60 * 60 * 1000));\r\n    return this;\r\n}\r\n\r\nDate.prototype.addMinutes = function (h) {\r\n    this.setTime(this.getTime() + (h * 60 * 1000));\r\n    return this;\r\n}\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * @version 06/08/2021\r\n * Map for display and selection of chargers.\r\n * @param props\r\n * @component\r\n */\r\n\r\nconst Map = (props) => {\r\n\r\n    const [location, setLocation] = useState([61.77735134683034, 9.350803488192016]);\r\n    const [overlay, setOverlay] = useState(null);\r\n    const dispatch = useDispatch();\r\n    /**\r\n     * Retrieves position of device on render.\r\n     * @returns function\r\n     * @memberOf Map\r\n     */\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        Geolocation\r\n        ().then((loc) => {\r\n            if (isMounted) setLocation([loc.coords.latitude, loc.coords.longitude]);\r\n        }).catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n        return () => {\r\n            isMounted = false\r\n        };\r\n    }, []);\r\n\r\n    const handleClickReserve = (e) => {\r\n        setOverlay(<ConfirmOverlay content={<div>\r\n            <h3>Er du sikker på at du vil reservere?</h3>\r\n            <h5>Du vil ha muligheten til å starte laderen innen 15 min</h5>\r\n            <h5>Tjenesten medfører et reservasjonsgebyr\r\n                på 10 kr</h5></div>}\r\n                                   onClickClose={() => setOverlay(null)}\r\n                                   onClickCancel={() => setOverlay(null)}\r\n                                   onClickAccept={() => {\r\n                                       postPendingSession(e).then(x => {\r\n                                           dispatch(getSession());\r\n                                       }).catch(error => {\r\n                                           console.log(error.response);\r\n                                       })\r\n                                       setOverlay(\r\n                                           <Overlay content={\r\n                                               <div className=\"centerFlex\"\r\n                                                    style={{\r\n                                                        width: \"60%\", height: \"30%\",\r\n                                                        display: \"block\", backgroundColor: \"white\", borderRadius: \"1em\"\r\n                                                    }}>\r\n                                                   <span className=\"close\" onClick={() => setOverlay(null)}>x</span>\r\n                                                   <h3>Vi fikk penga, bro</h3>\r\n                                                   <span style={{height: \"10em\", width: \"10em\"}}\r\n                                                         className=\"checkMarkAnim\"/>\r\n                                               </div>}/>);\r\n                                   }}\r\n        />);\r\n    }\r\n\r\n    const handleClickStartCharger = () => {\r\n        setOverlay(<StartChargerOverlay\r\n                chargerId={props.session.session.chargerID}\r\n                address={props.session.session.address}\r\n                onClickClose={() => setOverlay(null)}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            {overlay}\r\n            <MapContainer center={location} zoom={7} scrollWheelZoom={true}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                />\r\n                <MapConsumer>\r\n                    {(map) => {\r\n                        map.setView(location, map.getZoom());\r\n                        return null;\r\n                    }}\r\n                </MapConsumer>\r\n                {props.chargers.map((charger) =>\r\n                    <ChargerMarker key={charger.chargerId}\r\n                                   id={charger.chargerId}\r\n                        // The date from the database is in UTC format, convert to the user's timezone\r\n                                   scheduledEnd={charger.scheduledEnd != null ? dateToHHMM(UTCToLocalTime(new Date(charger.scheduledEnd))) : null}\r\n                                   chargerName={charger.chargerName}\r\n                                   active={charger.active}\r\n                                   latitude={charger.latitude}\r\n                                   longitude={charger.longitude}\r\n                                   ownerUname={charger.ownerUname}\r\n                                   address={charger.address}\r\n                                   postalCode={charger.postalCode}\r\n                                   city={charger.city}\r\n                                   handleClickReserve={(e) => handleClickReserve(e)}\r\n                                   handleClickStartCharger={() => handleClickStartCharger()}\r\n                                   session={props.session}\r\n                    />\r\n                )}\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\AddressSelectorMarker.js",["258"],"import {iconAvailable} from \"../misc/leafletIcons\";\r\nimport {Marker, Popup} from \"react-leaflet\";\r\nimport React from \"react\";\r\n\r\nconst {useRef} = require(\"react\");\r\nconst {useMemo} = require(\"react\");\r\n\r\n/**\r\n * @author Sven\r\n * A draggable component intended for use when registering a new charger\r\n * @param props {dragend - called when the user drags the marker to a new point on the map}\r\n * @component\r\n */\r\nconst AddressSelectorMarker = (props) => {\r\n    //const [position, setPosition] = useState(props.center)\r\n    const markerRef = useRef(null)\r\n    const eventHandlers = useMemo(\r\n        () => ({\r\n            dragend(e) {\r\n                const marker = markerRef.current\r\n                e.target.openPopup();\r\n                if (marker != null) {\r\n                    props.dragend(marker.getLatLng());\r\n                }\r\n            },\r\n        }),\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <Marker\r\n            draggable={true}\r\n            icon={iconAvailable}\r\n            eventHandlers={eventHandlers}\r\n            position={props.position}\r\n            ref={markerRef}>\r\n            <Popup>\r\n                <div><h3 className=\"laddelGreen\">{props.address}</h3>\r\n                    <h4>Dersom addressen ikke er korrekt kan dette endres på senere</h4>\r\n                    <button onClick={() => props.callback()}\r\n                            className=\"laddelGreen popupButton\">Trykk her for å registrere laderen</button></div>\r\n            </Popup>\r\n        </Marker>\r\n    )\r\n}\r\n\r\nexport default AddressSelectorMarker;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\AddressSearchBar.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\fetchChargersService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\fetchSessionService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\user\\userService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\geo\\geoService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\math\\vectordistance.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ChargerButton.js",["259","260","261","262"],"import React, {useRef} from 'react'\r\nimport {useState, useEffect} from \"react\";\r\n\r\nimport '../stylesheets/ChargerButton.css'\r\nimport {STATES, getAnimState} from \"../misc/constants\";\r\nimport loadingIco from '../media/loading.gif';\r\nimport {login} from \"../services/user/userService\";\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * Start/stop button for Charger\r\n *\r\n * @component\r\n */\r\n\r\nconst ChargerButton = ({operatingMode, onClick, waiting}) => {\r\n\r\n    const [animState, setAnimState] = useState(getAnimState(STATES.WAITING));\r\n    const [statusText, setStatusText] = useState(\"Venter på svar\");\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(waiting);\r\n        /**\r\n         * UseEffect listens to props.chargingState and updates ChargerButton based on that.\r\n         *\r\n         * @param {props.chargingState} int Status of charger\r\n         * @memberOf ChargerButton\r\n         */\r\n\r\n        if (operatingMode === STATES.OFFLINE) {\r\n            setAnimState(getAnimState(STATES.OFFLINE));\r\n            setStatusText(\"Laderen er ikke på nett\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        if (operatingMode === STATES.WAITING) {\r\n            setAnimState(getAnimState(STATES.WAITING));\r\n            setStatusText(\"Venter på svar\");\r\n            setDisabled(true);\r\n        } else if (operatingMode === STATES.CARCONNECTED) {\r\n            setAnimState(getAnimState(STATES.CARCONNECTED));\r\n            setStatusText(\"Tilkoblet, start lading\");\r\n            setDisabled(false);\r\n        } else if (operatingMode === STATES.CHARGING) {\r\n            setAnimState(getAnimState(STATES.CHARGING));\r\n            setStatusText(\"Lader\");\r\n            setDisabled(false);\r\n        } else if (operatingMode === STATES.NOCARCONNECTED) {\r\n            setStatusText(\"Bil ikke tilkoblet\");\r\n            setAnimState(getAnimState(STATES.NOCARCONNECTED));\r\n            setDisabled(true);\r\n        } else if (operatingMode === STATES.ERROR) {\r\n            setStatusText(\"Det oppstod en feil\");\r\n            setAnimState(getAnimState(STATES.ERROR));\r\n            setDisabled(true);\r\n        }\r\n    }, [operatingMode]);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{float: \"right\", position: \"absolute\", visibility: waiting ? \"visible\" : \"hidden\"}}>\r\n                <img src={loadingIco} style={{width: \"1em\", height: \"1em\"}}/>\r\n            </div>\r\n            <button id=\"startButton\"\r\n                    onClick={() => onClick()}\r\n                    className={`round ${animState} chargerStatus`}\r\n                    disabled={disabled}>\r\n                <h4>{statusText}</h4>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChargerButton;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\stopChargingService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\startChargingService.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\TimeSelector.js",["263","264","265","266","267"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport roundToNearest5 from \"../services/math/roundToNearest5\";\r\nimport {addHours, dateToHHMM, nToNN} from \"../services/time/timeService\";\r\n\r\n\r\nconst TimeSelector = ({onDateChanged}) => {\r\n\r\n    const [curDate, setCurDate] = useState(new Date());\r\n\r\n    const [availableMinutes, setAvailableMinutes] = useState(null);\r\n    const [selectedHour, setSelectedHour] = useState(curDate.getHours());\r\n    const [selectedMinute, setSelectedMinute] = useState(curDate.getMinutes());\r\n\r\n    const selectedDate = useRef(new Date());\r\n\r\n    const assembleDate = () => {\r\n        selectedDate.current.setHours(selectedHour);\r\n        selectedDate.current.setMinutes(selectedMinute);\r\n        selectedDate.current.setSeconds(0);\r\n\r\n        // It is the next day\r\n        if(selectedHour < curDate.getHours()) {\r\n            selectedDate.current.setDate(curDate.getDate() + 1);\r\n        } else {\r\n            selectedDate.current.setDate(curDate.getDate());\r\n        }\r\n\r\n        onDateChanged(selectedDate.current);\r\n    }\r\n\r\n\r\n    const pollTime = setInterval(() => {\r\n        const curDate = new Date();\r\n        if (curDate.getMinutes() !== curDate.getMinutes()) {\r\n            clearInterval(pollTime);\r\n            setCurDate(new Date());\r\n        }\r\n    }, 1000);\r\n\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n\r\n        if(isMounted) {\r\n            // To ensure that if the clock is for example 19:55, you can only start selecting from 20:00 and up\r\n            if(curDate.getMinutes() + 5 >= 55) {\r\n                setSelectedHour(curDate.getHours() + 1);\r\n                setSelectedMinute(0);\r\n                updateAvailableMinutes();\r\n            } else {\r\n                setSelectedMinute(roundToNearest5(curDate.getMinutes() + 5))\r\n            }\r\n        }\r\n\r\n        return (() => {\r\n            clearInterval(pollTime);\r\n            isMounted = false;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            updateAvailableMinutes();\r\n        }\r\n\r\n        return (() => {\r\n            isMounted = false;\r\n        })\r\n\r\n    }, [selectedHour]);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            assembleDate();\r\n        }\r\n\r\n        return (() => {\r\n            isMounted = false;\r\n        })\r\n    }, [selectedHour, selectedMinute]);\r\n\r\n    const updateAvailableMinutes = () => {\r\n        let avail = [];\r\n        // DO NOT CHANGE TO ==\r\n        switch(curDate.getHours() === selectedHour) {\r\n            case true:\r\n                for(let i = roundToNearest5(curDate.getMinutes()) + 5; i < 60; i+=5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n            default:\r\n                for(let i = 0; i < 60; i += 5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"timeSelectorContainer\">\r\n            <select onChange={(e) => {\r\n                setSelectedHour(e.target.value);\r\n            }} style={{width: \"33%\"}} name=\"hour\">\r\n                {curDate.getMinutes() + 5 >= 55 ?\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(curDate, x + 1).getHours()}>{nToNN(addHours(curDate, x + 1).getHours())}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(curDate, x).getHours()}>{nToNN(addHours(curDate, x).getHours())}</option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n            <h3 style={{display: \"inline-block\", marginLeft: \"3%\", marginRight: \"3%\"}}>:</h3>\r\n            <select onChange={(e) => {\r\n                setSelectedMinute(e.target.value)\r\n            }} style={{width: \"33%\"}} name=\"minute\">\r\n                {availableMinutes !== null ?\r\n                    availableMinutes.map((minute) => {\r\n                        return (\r\n                            <option key={minute} value={minute}>{nToNN(minute)}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    null\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\user\\auth-header.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\misc\\constants.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\misc\\leafletIcons.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\http\\http.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\checkChargerStateService.js",["268"],"import { doPostAsync, doGetAsync} from \"../http/http\";\r\nimport {ip, tomcatPort} from \"../../misc/constants\"; //kanskje ikke nødvendig?\r\n\r\n/**\r\n * @author Sven\r\n * Klassen skal returnere status på lader\r\n * @deprecated\r\n *\r\n * @param {string} chargerId ID til lader\r\n * @param callback\r\n * @returns {Promise<void>}\r\n */\r\n\r\nconst getChargerState = (chargerId) => {\r\n    return doPostAsync(`http://${ip}:${tomcatPort}/OperatingMode`,\r\n        {chargerID: chargerId.toString()}, {\"Content-Type\": \"text/plain\"});\r\n}\r\n\r\nexport { getChargerState }\r\n","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\time\\timeService.js",["269"],"/**\r\n * @author Magnus & Sven\r\n *\r\n * Service for various operations relating to time.\r\n */\r\n\r\n/**\r\n * Converts a date object to a HHMM string.\r\n *\r\n * @param time the date object\r\n * @returns {`${string}:${string}`}\r\n */\r\n\r\nconst UTCToLocalTime = (date) => {\r\n    return addMinutes(date, -date.getTimezoneOffset());\r\n}\r\n\r\nconst dateToHHMM = (time) => {\r\n    const hours = time.getHours() > 9 ? `${time.getHours()}` : `0${time.getHours()}`;\r\n    const minutes = time.getMinutes() > 9 ? `${time.getMinutes()}` : `0${time.getMinutes()}`;\r\n    return `${hours}:${minutes}`;\r\n}\r\n\r\nlet interval;\r\n\r\n/**\r\n * Periodically compares time with now time and calls callback if time is older than now time\r\n *\r\n * @param time the object that will be compared with now time\r\n * @param callback the callback\r\n *\r\n * @returns {void}\r\n */\r\n\r\nconst pollTime = (time, callback) => {\r\n    if(interval != null) clearInterval(interval);\r\n    interval = setInterval(() => {\r\n        const now = new Date();\r\n        if(now > time) {\r\n            callback(new Date());\r\n        }\r\n    }, 1000);\r\n}\r\n\r\n/**\r\n * Stops pollTime\r\n *\r\n * @returns {void}\r\n */\r\n\r\nconst stopPolling = () => {\r\n    if(interval != null) clearInterval(interval);\r\n    interval = null;\r\n}\r\n\r\n/**\r\n * Converts a single digit number to a double digit number (eg. 9 -> 09)\r\n *\r\n * @param n the number to be converted\r\n * @return {string}\r\n */\r\n\r\nconst nToNN = (n) => {\r\n    return (n > 9 ? `${n}` : `0${n}`);\r\n}\r\n\r\n/**\r\n * Adds minutes to a date object\r\n *\r\n * @param date the date object\r\n * @param minutes number of minutes\r\n * @return {Date}\r\n */\r\n\r\nconst addMinutes = (date, minutes) => {\r\n\r\n    return new Date(date.getTime() + minutes*60000);\r\n}\r\n\r\n/**\r\n * Adds hours to a date object\r\n *\r\n * @param date the date object\r\n * @param hours number of hours\r\n * @return {Date}\r\n */\r\n\r\nconst addHours = (date, hours) => {\r\n\r\n    const now = new Date();\r\n\r\n    const newDate = new Date(date.getTime() + hours*3600000);\r\n\r\n    if (newDate < now) {\r\n        return now;\r\n    }\r\n    return newDate;\r\n}\r\n\r\nexport {addMinutes, addHours, dateToHHMM, nToNN, pollTime, UTCToLocalTime};","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ChargerMarker.js",["270","271","272","273","274","275","276","277","278","279"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport {Marker, Popup} from \"react-leaflet\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport getChargerOperatingMode from \"../services/charger/getChargerOperatingMode\";\r\n\r\nimport {STATES} from \"../misc/constants\";\r\nimport {iconAvailable, iconUnavailable, iconPending} from \"../misc/leafletIcons\";\r\nimport loading from '../media/loading.gif';\r\nimport {startCharger} from \"../services/charger/startChargingService\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMinutes, dateToHHMM, UTCToLocalTime} from \"../services/time/timeService\";\r\n\r\n/**\r\n * A prototype that converts a date object to DDMMHHMM format\r\n * @return {string} a Date in DDMMHHMM string format\r\n */\r\nDate.prototype.ddmmhhmm = function () {\r\n    return (this.getDate() < 10 ? (\"0\" + this.getDate()) : this.getDate()) + \"/\" + ((this.getMonth() + 1) < 10 ? (\"0\" + (this.getMonth() + 1)) : (this.getMonth() + 1)) + \" \" +\r\n        (this.getHours() < 10 ? (\"0\" + this.getHours()) : this.getHours())\r\n        + \":\" + (this.getMinutes() < 10 ? (\"0\" + this.getMinutes()) : this.getMinutes());\r\n}\r\n\r\n/**\r\n * @author Sven\r\n * @version 06/08/2021\r\n * A component for placing a marker on a map\r\n * @param props {address, active, chargerName, city, id, latitude, longitude, postalCode, scheduledEnd}\r\n */\r\nconst ChargerMarker = (props) => {\r\n\r\n    const [active, setActive] = useState(-1);\r\n    const [zIndexOffset, setZIndexOffset] = useState(0);\r\n    const [icon, setIcon] = useState(iconUnavailable);\r\n    const [popupContent, setPopupContent] = useState(null);\r\n\r\n    const updateChargerProps = () => {\r\n        if (props.active === 1) {\r\n            if (props.session.session !== null && props.id === props.session.session.chargerID) {\r\n                if (props.scheduledEnd) {\r\n                    setIcon(iconAvailable)\r\n                    setZIndexOffset(3);\r\n                    setPopupContent(<div>Du har en aktiv ladeøkt med denne laderen\r\n                        <button className=\"popupButton\">Vis ladeøkt</button>\r\n                    </div>)\r\n                } else {\r\n                    setZIndexOffset(3);\r\n                    setIcon(iconPending);\r\n                    setPopupContent(<div>Du har reservert denne laderen\r\n                        <button onClick={() => {\r\n                            props.handleClickStartCharger();\r\n                        }} style={{backgroundColor: \"#EAC43D\"}} className=\"popupButton\">Start lading</button></div>)\r\n                }\r\n            } else if (props.scheduledEnd !== null) {\r\n                setIcon(iconUnavailable);\r\n                setZIndexOffset(1);\r\n                setPopupContent(\r\n                    <div>Denne laderen er reservert til {props.scheduledEnd}\r\n                    </div>);\r\n            } else {\r\n                setZIndexOffset(1);\r\n                setIcon(iconUnavailable);\r\n                setPopupContent(<div>Denne laderen er reservert</div>)\r\n            }\r\n        } else if (props.active === 0) {\r\n            setIcon(iconAvailable);\r\n            if (props.session.session !== null) {\r\n                setZIndexOffset(2);\r\n                setPopupContent(<div>Du har allerede en ladeøkt</div>)\r\n            } else {\r\n                setZIndexOffset(2);\r\n                setPopupContent(<div>Ledig, reserver <button onClick={() =>\r\n                    props.handleClickReserve(props.id)} className=\"popupButton\">Reserver</button></div>)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            updateChargerProps();\r\n        }, [props.session.session]\r\n    );\r\n\r\n    return (\r\n        <Marker\r\n            eventHandlers={{\r\n                click: () => {\r\n                    // Event handler for when you click on a marker\r\n                    setPopupContent(<div><h3>Henter laderstatus</h3><img style={{width: \"5ch\", height: \"5ch\"}} src={loading}/></div>);\r\n                    getChargerOperatingMode(props.id).then(x => { // Fetch the charger's operating mode\r\n                        if(x.data.operatingMode === -1) {\r\n                            setActive(0);\r\n                            setIcon(iconUnavailable);\r\n                            setPopupContent(<div><h3>Denne laderen er ikke på nett</h3></div>);\r\n                            return;\r\n                        }\r\n                        if (x.data.operatingMode !== STATES.NOCARCONNECTED && active !== 1) {\r\n                            setActive(1);\r\n                        }\r\n                        updateChargerProps();\r\n                    })\r\n                }\r\n            }}\r\n            icon={icon}\r\n            zIndexOffset={zIndexOffset} // Render chargers that are available on top of unavailable chargers\r\n            position={[props.latitude, props.longitude]}>\r\n            <Popup>\r\n                <span>\r\n                    <h4 className=\"laddelGreen\">{props.chargerName}</h4>\r\n                    <h4>{props.address + \", \" + props.postalCode + \" \" + props.city}</h4>\r\n                    {popupContent}\r\n                </span>\r\n            </Popup>\r\n        </Marker>\r\n    )\r\n}\r\n\r\nexport default ChargerMarker;\r\n","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\getChargerOperatingMode.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\sessionActions.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ErrorBox.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\actions\\mapActions.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\sessionReducer.js",["280"],"import { ACTION_TYPES } from \"../actions/sessionActions\";\r\n\r\nconst initState = {\r\n    session: null,\r\n    isLoading: false,\r\n    loaded: false,\r\n    fetchError: null,\r\n    isActive: false,\r\n    isPending: false\r\n}\r\n\r\n/**\r\n * @author Magnus\r\n * @version 06/08/2021\r\n * Method for updating session state\r\n * @param state - initial state\r\n * @param action - JavaScript-object w. action type and payload\r\n * @return state - updated state\r\n */\r\n\r\nconst sessionReducer = (state = initState, action) => {\r\n    const payload = action.payload;\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_SESSION_PENDING:\r\n            console.log(\"fetching session...\");\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loaded: false,\r\n                fetchError: null,\r\n                isActive: false,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_ACTIVE_SUCCESS:\r\n            console.log(\"success\");\r\n            return {\r\n                ...state,\r\n                session: payload.data,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: null,\r\n                isActive: true,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_ACTIVE_FAILURE:\r\n            console.log(\"failed\");\r\n            if (payload.response.status === 404) {\r\n                return {\r\n                    ...state,\r\n                    session: null,\r\n                    isLoading: false,\r\n                    loaded: true,\r\n                    fetchError: null,\r\n                    isActive: false,\r\n                    isPending: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                session: null,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: payload,\r\n                isActive: false,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_PENDING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                session: payload.data,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: null,\r\n                isActive: false,\r\n                isPending: true\r\n            }\r\n        case ACTION_TYPES.FETCH_PENDING_FAILURE:\r\n            if (payload.response.status == 404) {\r\n                return {\r\n                    ...state,\r\n                    session: null,\r\n                    isLoading: false,\r\n                    loaded: true,\r\n                    fetchError: null,\r\n                    isActive: false,\r\n                    isPending: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                session: null,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: payload.data,\r\n                isActive: false,\r\n                isPending: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default sessionReducer;\r\n","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\reducers\\mapReducer.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\Overlay.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\ConfirmOverlay.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\postPendingSession.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\getPendingSession.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\charger\\operatingModePollingService.js",["281"],"import {getChargerState} from \"./checkChargerStateService\";\r\nimport getChargerOperatingMode from \"./getChargerOperatingMode\";\r\n\r\n/**\r\n * @author Sven\r\n * Service for polling operatingMode of chargers\r\n */\r\n\r\nlet pollingTimeout = null;\r\nvar selectedId = -1;\r\nlet doPoll;\r\n\r\n/**\r\n * Invokes a poll without waiting\r\n *\r\n * @returns {void}\r\n */\r\nconst invokePoll = () => {\r\n    doPoll();\r\n}\r\n\r\n/**\r\n * Communicates with backend to get the operatingMode\r\n * Calls the callback function with the opearting mode\r\n *\r\n * @param pollingId ID of the charger\r\n * @param callback Callback function\r\n */\r\nconst pollNew = (pollingId, callback) => {\r\n    clearTimeout(pollingTimeout);\r\n        doPoll = async () => {\r\n            selectedId = pollingId;\r\n            await getChargerOperatingMode(pollingId).then(x => {\r\n                callback(x);\r\n            }).catch(e => {\r\n                callback(-1);\r\n            });\r\n            pollingTimeout = setTimeout(doPoll, 10000);\r\n    }\r\n    doPoll();\r\n}\r\n\r\nexport {pollNew, selectedId, invokePoll};","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\StartChargerOverlay.js",["282"],"import Overlay from \"./Overlay\";\r\nimport '../stylesheets/StartChargerOverlay.css';\r\nimport TimeSelector from \"./TimeSelector\";\r\nimport ChargerButton from \"./ChargerButton\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport getChargerOperatingMode from \"../services/charger/getChargerOperatingMode\";\r\nimport {STATES} from \"../misc/constants\";\r\nimport {startCharger} from \"../services/charger/startChargingService\";\r\n\r\nconst StartChargerOverlay = ({address, chargerId, onClickClose}) => {\r\n\r\n    const [operatingMode, setOperatingMode] = useState(0);\r\n    const [waiting, setWaiting] = useState(true);\r\n\r\n    let newestDate = useRef(null);\r\n\r\n    const updateOperatingMode = () => {\r\n        setWaiting(true);\r\n        getChargerOperatingMode(chargerId).then(x => {\r\n            setOperatingMode(x.data.operatingMode);\r\n            setWaiting(false);\r\n        }).catch(() => {\r\n            setOperatingMode(STATES.ERROR);\r\n            setWaiting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateOperatingMode();\r\n        let interval = setInterval(() => {\r\n            updateOperatingMode();\r\n        }, 10000);\r\n\r\n        return (() => {\r\n            clearInterval(interval);\r\n        })\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Overlay content={\r\n            <div style={{justifyContent: \"space-evenly\"}} className=\"centerFlex startChargerOverlay\">\r\n                <span onClick={() => onClickClose()} className=\"close\">x</span>\r\n                <h3>Start lading ved {address}</h3>\r\n                <div style={{width: \"100%\"}}>\r\n                    <h3 className=\"laddelGreen\">Lad til</h3>\r\n                    <TimeSelector onDateChanged={(e) => {\r\n                        newestDate.current = e;\r\n                    }}/>\r\n                </div>\r\n                <ChargerButton waiting={waiting} onClick={() => {\r\n                    startCharger(chargerId, newestDate.current.getTime()).then(x => {\r\n                        console.log(x);\r\n                    }).catch(error => {\r\n\r\n                    });\r\n                }} operatingMode={operatingMode}/>\r\n            </div>\r\n        }/>\r\n    )\r\n}\r\n\r\nexport default StartChargerOverlay;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\TIMESELECTOR-DEPRECATED.js",["283"],"import React, {useState, useEffect} from 'react';\r\nimport {addHours, addMinutes, nToNN, pollTime} from '../services/time/timeService'\r\nimport '../stylesheets/TimeSelector.css';\r\n\r\n/**\r\n * @author Magnus & Sven\r\n *\r\n * Komponent som lar en velge tidspunkt.\r\n * @component\r\n * @deprecated\r\n */\r\n\r\nconst TIMESELECTORDEPRECATED = (props) => {\r\n\r\n    const [time, setTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n\r\n        /**\r\n         * Metode som setter tid i parent-komponent\r\n         *\r\n         * @memberOf TIMESELECTORDEPRECATED\r\n         * @returns {void}\r\n         */\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            props.setTime(time);\r\n        }\r\n\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [props.getTime]);\r\n\r\n    pollTime(time, (e) => setTime(e));\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"timeContainer\">\r\n                <div className=\"column\">\r\n                    <div className=\"timeController\" onClick={() => setTime(addHours(time, 1))}>▲</div>\r\n                    <h4>{nToNN(time.getHours())}</h4>\r\n                    <div className=\"timeController\" onClick={() => setTime(addHours(time, -1))}>▼</div>\r\n                </div>\r\n\r\n                <h4>:</h4>\r\n\r\n                <div  className=\"column\">\r\n                    <div className=\"timeController\" onClick={() => setTime(addMinutes(time, 5))} >▲</div>\r\n                    <h4>{nToNN(time.getMinutes())}</h4>\r\n                    <div className=\"timeController\" onClick={() => setTime(addMinutes(time, -5))}>▼</div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TIMESELECTORDEPRECATED;","C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\services\\math\\roundToNearest5.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\OkOverlay.js",[],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\HamburgerMenu.js",["284","285"],"C:\\Users\\Svennærn\\Desktop\\laddel-mvp\\frontend\\src\\components\\SideNavbar.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":16,"column":1,"nodeType":"292","endLine":16,"endColumn":37},{"ruleId":"293","severity":1,"message":"294","line":27,"column":11,"nodeType":"295","messageId":"296","endLine":27,"endColumn":22},{"ruleId":"297","severity":1,"message":"298","line":36,"column":17,"nodeType":"299","endLine":37,"endColumn":115},{"ruleId":"300","severity":1,"message":"301","line":22,"column":8,"nodeType":"302","endLine":22,"endColumn":10,"suggestions":"303"},{"ruleId":"293","severity":1,"message":"304","line":1,"column":27,"nodeType":"295","messageId":"296","endLine":1,"endColumn":33},{"ruleId":"293","severity":1,"message":"305","line":13,"column":9,"nodeType":"295","messageId":"296","endLine":13,"endColumn":21},{"ruleId":"293","severity":1,"message":"306","line":14,"column":9,"nodeType":"295","messageId":"296","endLine":14,"endColumn":20},{"ruleId":"293","severity":1,"message":"307","line":15,"column":8,"nodeType":"295","messageId":"296","endLine":15,"endColumn":26},{"ruleId":"293","severity":1,"message":"308","line":16,"column":8,"nodeType":"295","messageId":"296","endLine":16,"endColumn":25},{"ruleId":"293","severity":1,"message":"309","line":17,"column":8,"nodeType":"295","messageId":"296","endLine":17,"endColumn":15},{"ruleId":"293","severity":1,"message":"310","line":51,"column":13,"nodeType":"295","messageId":"296","endLine":51,"endColumn":22},{"ruleId":"300","severity":1,"message":"311","line":58,"column":8,"nodeType":"302","endLine":58,"endColumn":10,"suggestions":"312"},{"ruleId":"300","severity":1,"message":"313","line":47,"column":8,"nodeType":"302","endLine":47,"endColumn":31,"suggestions":"314"},{"ruleId":"300","severity":1,"message":"313","line":38,"column":8,"nodeType":"302","endLine":38,"endColumn":34,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":81,"column":126,"nodeType":"318","messageId":"319","endLine":81,"endColumn":127,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":43,"column":30,"nodeType":"323","messageId":"324","endLine":43,"endColumn":32},{"ruleId":"321","severity":1,"message":"322","line":45,"column":30,"nodeType":"323","messageId":"324","endLine":45,"endColumn":32},{"ruleId":"300","severity":1,"message":"325","line":37,"column":8,"nodeType":"302","endLine":37,"endColumn":10,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":56,"column":9,"nodeType":"329","messageId":"330","endLine":69,"endColumn":10},{"ruleId":"293","severity":1,"message":"331","line":17,"column":8,"nodeType":"295","messageId":"296","endLine":17,"endColumn":16},{"ruleId":"293","severity":1,"message":"332","line":18,"column":8,"nodeType":"295","messageId":"296","endLine":18,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":20,"column":1,"nodeType":"335","messageId":"324","endLine":23,"endColumn":2},{"ruleId":"333","severity":1,"message":"334","line":25,"column":1,"nodeType":"335","messageId":"324","endLine":28,"endColumn":2},{"ruleId":"300","severity":1,"message":"336","line":27,"column":9,"nodeType":"302","endLine":27,"endColumn":11,"suggestions":"337"},{"ruleId":"293","severity":1,"message":"304","line":1,"column":16,"nodeType":"295","messageId":"296","endLine":1,"endColumn":22},{"ruleId":"293","severity":1,"message":"338","line":7,"column":9,"nodeType":"295","messageId":"296","endLine":7,"endColumn":14},{"ruleId":"300","severity":1,"message":"339","line":60,"column":8,"nodeType":"302","endLine":60,"endColumn":23,"suggestions":"340"},{"ruleId":"297","severity":1,"message":"298","line":65,"column":17,"nodeType":"299","endLine":65,"endColumn":78},{"ruleId":"293","severity":1,"message":"341","line":3,"column":19,"nodeType":"295","messageId":"296","endLine":3,"endColumn":29},{"ruleId":"342","severity":1,"message":"343","line":34,"column":13,"nodeType":"323","messageId":"344","endLine":34,"endColumn":58},{"ruleId":"300","severity":1,"message":"345","line":60,"column":8,"nodeType":"302","endLine":60,"endColumn":10,"suggestions":"346"},{"ruleId":"300","severity":1,"message":"347","line":73,"column":8,"nodeType":"302","endLine":73,"endColumn":22,"suggestions":"348"},{"ruleId":"300","severity":1,"message":"349","line":85,"column":8,"nodeType":"302","endLine":85,"endColumn":38,"suggestions":"350"},{"ruleId":"293","severity":1,"message":"351","line":1,"column":23,"nodeType":"295","messageId":"296","endLine":1,"endColumn":33},{"ruleId":"293","severity":1,"message":"352","line":51,"column":7,"nodeType":"295","messageId":"296","endLine":51,"endColumn":18},{"ruleId":"293","severity":1,"message":"304","line":1,"column":27,"nodeType":"295","messageId":"296","endLine":1,"endColumn":33},{"ruleId":"293","severity":1,"message":"353","line":3,"column":9,"nodeType":"295","messageId":"296","endLine":3,"endColumn":13},{"ruleId":"293","severity":1,"message":"354","line":10,"column":9,"nodeType":"295","messageId":"296","endLine":10,"endColumn":21},{"ruleId":"293","severity":1,"message":"355","line":11,"column":9,"nodeType":"295","messageId":"296","endLine":11,"endColumn":16},{"ruleId":"293","severity":1,"message":"356","line":12,"column":9,"nodeType":"295","messageId":"296","endLine":12,"endColumn":19},{"ruleId":"293","severity":1,"message":"341","line":12,"column":21,"nodeType":"295","messageId":"296","endLine":12,"endColumn":31},{"ruleId":"293","severity":1,"message":"357","line":12,"column":33,"nodeType":"295","messageId":"296","endLine":12,"endColumn":47},{"ruleId":"333","severity":1,"message":"334","line":18,"column":1,"nodeType":"335","messageId":"324","endLine":22,"endColumn":2},{"ruleId":"300","severity":1,"message":"358","line":80,"column":12,"nodeType":"302","endLine":80,"endColumn":35,"suggestions":"359"},{"ruleId":"297","severity":1,"message":"298","line":88,"column":69,"nodeType":"299","endLine":88,"endColumn":127},{"ruleId":"321","severity":1,"message":"322","line":78,"column":41,"nodeType":"323","messageId":"324","endLine":78,"endColumn":43},{"ruleId":"293","severity":1,"message":"360","line":1,"column":9,"nodeType":"295","messageId":"296","endLine":1,"endColumn":24},{"ruleId":"300","severity":1,"message":"361","line":37,"column":8,"nodeType":"302","endLine":37,"endColumn":10,"suggestions":"362"},{"ruleId":"300","severity":1,"message":"363","line":34,"column":8,"nodeType":"302","endLine":34,"endColumn":23,"suggestions":"364"},{"ruleId":"293","severity":1,"message":"365","line":3,"column":16,"nodeType":"295","messageId":"296","endLine":3,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":8,"column":13,"nodeType":"299","endLine":10,"endColumn":41},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["368"],"'useRef' is defined but never used.","'StartCharger' is defined but never used.","'doPostAsync' is defined but never used.","'postPendingSession' is defined but never used.","'getPendingSession' is defined but never used.","'Overlay' is defined but never used.","'isMounted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onLoad', 'props.map.isLoading', and 'props.session.isLoading'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has a missing dependency: 'setError'. Either include it or remove the dependency array.",["370"],["371"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["372","373"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.chargerId'. Either include it or remove the dependency array.",["374"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'ErrorBox' is defined but never used.","'OkOverlay' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","React Hook useMemo has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useMemo call and refer to those specific props inside useMemo.",["375"],"'login' is defined but never used.","React Hook useEffect has a missing dependency: 'waiting'. Either include it or remove the dependency array.",["376"],"'dateToHHMM' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has missing dependencies: 'curDate', 'pollTime', and 'updateAvailableMinutes'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedHour' needs the current value of 'curDate'.",["377"],"React Hook useEffect has a missing dependency: 'updateAvailableMinutes'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'assembleDate'. Either include it or remove the dependency array.",["379"],"'doGetAsync' is defined but never used.","'stopPolling' is assigned a value but never used.","'Link' is defined but never used.","'startCharger' is defined but never used.","'connect' is defined but never used.","'addMinutes' is defined but never used.","'UTCToLocalTime' is defined but never used.","React Hook useEffect has a missing dependency: 'updateChargerProps'. Either include it or remove the dependency array.",["380"],"'getChargerState' is defined but never used.","React Hook useEffect has a missing dependency: 'updateOperatingMode'. Either include it or remove the dependency array.",["381"],"React Hook useEffect has missing dependencies: 'props' and 'time'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["382"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"messageId":"391","fix":"392","desc":"393"},{"messageId":"394","fix":"395","desc":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"Update the dependencies array to be: [dispatch]",{"range":"415","text":"416"},"Update the dependencies array to be: [onLoad, props.map.isLoading, props.session.isLoading]",{"range":"417","text":"418"},"Update the dependencies array to be: [props.auth.loginError, setError]",{"range":"419","text":"420"},"Update the dependencies array to be: [props.auth.registerError, setError]",{"range":"421","text":"422"},"removeEscape",{"range":"423","text":"424"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"425","text":"426"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [props.chargerId]",{"range":"427","text":"428"},"Update the dependencies array to be: [props]",{"range":"429","text":"430"},"Update the dependencies array to be: [operatingMode, waiting]",{"range":"431","text":"432"},"Update the dependencies array to be: [curDate, pollTime, updateAvailableMinutes]",{"range":"433","text":"434"},"Update the dependencies array to be: [selectedHour, updateAvailableMinutes]",{"range":"435","text":"436"},"Update the dependencies array to be: [assembleDate, selectedHour, selectedMinute]",{"range":"437","text":"438"},"Update the dependencies array to be: [props.session.session, updateChargerProps]",{"range":"439","text":"440"},"Update the dependencies array to be: [updateOperatingMode]",{"range":"441","text":"442"},"Update the dependencies array to be: [props, props.getTime, time]",{"range":"443","text":"444"},[740,742],"[dispatch]",[1878,1880],"[onLoad, props.map.isLoading, props.session.isLoading]",[1603,1626],"[props.auth.loginError, setError]",[1228,1254],"[props.auth.registerError, setError]",[3012,3013],"",[3012,3012],"\\",[1028,1030],"[props.chargerId]",[875,877],"[props]",[2142,2157],"[operatingMode, waiting]",[1948,1950],"[curDate, pollTime, updateAvailableMinutes]",[2167,2181],"[selectedHour, updateAvailableMinutes]",[2386,2416],"[assembleDate, selectedHour, selectedMinute]",[3559,3582],"[props.session.session, updateChargerProps]",[1224,1226],"[updateOperatingMode]",[763,778],"[props, props.getTime, time]"]