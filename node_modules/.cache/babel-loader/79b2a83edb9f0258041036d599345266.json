{"ast":null,"code":"import _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\TimeSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeSelector = function TimeSelector() {\n  _s();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(date.getHours()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectdHour = _useState4[0],\n      setSelectedHour = _useState4[1];\n\n  var _useState5 = useState(date.getMinutes() + 5),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedMinute = _useState6[0],\n      setSelectedMinute = _useState6[1];\n\n  var pollTime = setInterval(function () {\n    var curDate = new Date();\n\n    if (curDate.getMinutes() !== date.getMinutes()) {\n      clearInterval(pollTime);\n      setDate(new Date());\n    }\n  }, 1000);\n  useEffect(function () {\n    return function () {\n      clearInterval(pollTime);\n    };\n  }, []);\n\n  var getAvailableMinutes = function getAvailableMinutes() {\n    var ret = [];\n\n    switch (selectdHour === date.getHours()) {\n      case true:\n        for (var i = date.getMinutes(); i < 60; i += 5) {\n          ret.push(i);\n        }\n\n        return ret;\n\n      default:\n        for (var _i = 0; _i < 60; _i += 5) {\n          ret.push(_i);\n        }\n\n        return ret;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        width: \"33%\"\n      },\n      name: \"hour\",\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"inline-block\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      },\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        width: \"33%\"\n      },\n      name: \"minute\",\n      children: [getAvailableMinutes().map(function (min) {\n        /*#__PURE__*/\n        _jsxDEV(\"option\", {\n          value: min,\n          children: min\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, _this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeSelector, \"sKj7Oey0pGIfiFEYPbRP6lXe6lU=\");\n\n_c = TimeSelector;\nexport default TimeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSelector\");","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/components/TimeSelector.js"],"names":["React","useEffect","useRef","useState","TimeSelector","Date","date","setDate","getHours","selectdHour","setSelectedHour","getMinutes","selectedMinute","setSelectedMinute","pollTime","setInterval","curDate","clearInterval","getAvailableMinutes","ret","i","push","width","display","marginLeft","marginRight","map","min"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAEvB,kBAAwBD,QAAQ,CAAC,IAAIE,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAuCJ,QAAQ,CAACG,IAAI,CAACE,QAAL,EAAD,CAA/C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,eAApB;;AACA,mBAA4CP,QAAQ,CAACG,IAAI,CAACK,UAAL,KAAoB,CAArB,CAApD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC/B,QAAMC,OAAO,GAAG,IAAIX,IAAJ,EAAhB;;AACA,QAAGW,OAAO,CAACL,UAAR,OAAyBL,IAAI,CAACK,UAAL,EAA5B,EAA+C;AAC3CM,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAP,MAAAA,OAAO,CAAC,IAAIF,IAAJ,EAAD,CAAP;AACH;AACJ,GAN2B,EAM1B,IAN0B,CAA5B;AASAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAQ,YAAM;AACXgB,MAAAA,aAAa,CAACH,QAAD,CAAb;AACF,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAIC,GAAG,GAAG,EAAV;;AACA,YAAQV,WAAW,KAAKH,IAAI,CAACE,QAAL,EAAxB;AACI,WAAK,IAAL;AACI,aAAI,IAAIY,CAAC,GAAGd,IAAI,CAACK,UAAL,EAAZ,EAA+BS,CAAC,GAAG,EAAnC,EAAuCA,CAAC,IAAE,CAA1C,EAA6C;AACzCD,UAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACH;;AACD,eAAOD,GAAP;;AACJ;AACI,aAAI,IAAIC,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAG,EAAnB,EAAuBA,EAAC,IAAE,CAA1B,EAA6B;AACzBD,UAAAA,GAAG,CAACE,IAAJ,CAASD,EAAT;AACH;;AACD,eAAOD,GAAP;AAVR;AAYH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAQ,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAE;AAAR,OAAf;AAA+B,MAAA,IAAI,EAAC,MAApC;AAAA,6BACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,cAAV;AAA0BC,QAAAA,UAAU,EAAE,IAAtC;AAA4CC,QAAAA,WAAW,EAAE;AAAzD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAQ,MAAA,KAAK,EAAE;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAf;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA,iBACKJ,mBAAmB,GAAGQ,GAAtB,CAA0B,UAACC,GAAD,EAAS;AAChC;AAAA;AAAQ,UAAA,KAAK,EAAEA,GAAf;AAAA,oBAAqBA;AAArB;AAAA;AAAA;AAAA;AAAA;AACH,OAFA,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CAlDD;;GAAMvB,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nconst TimeSelector = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [selectdHour, setSelectedHour] = useState(date.getHours());\r\n    const [selectedMinute, setSelectedMinute] = useState(date.getMinutes() + 5);\r\n\r\n    const pollTime = setInterval(() => {\r\n        const curDate = new Date();\r\n        if(curDate.getMinutes() !== date.getMinutes()) {\r\n            clearInterval(pollTime);\r\n            setDate(new Date());\r\n        }\r\n    },1000);\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n           clearInterval(pollTime);\r\n        });\r\n    }, []);\r\n\r\n    const getAvailableMinutes = () => {\r\n        let ret = [];\r\n        switch (selectdHour === date.getHours()) {\r\n            case true:\r\n                for(let i = date.getMinutes(); i < 60; i+=5) {\r\n                    ret.push(i);\r\n                }\r\n                return ret;\r\n            default:\r\n                for(let i = 0; i < 60; i+=5) {\r\n                    ret.push(i);\r\n                }\r\n                return ret;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <select style={{width: \"33%\"}} name=\"hour\">\r\n                <option value=\"1\">1</option>\r\n            </select>\r\n            <h3 style={{display: \"inline-block\", marginLeft: \"3%\", marginRight: \"3%\"}}>:</h3>\r\n            <select style={{width: \"33%\"}} name=\"minute\">\r\n                {getAvailableMinutes().map((min) => {\r\n                    <option value={min}>{min}</option>\r\n                })};\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;"]},"metadata":{},"sourceType":"module"}