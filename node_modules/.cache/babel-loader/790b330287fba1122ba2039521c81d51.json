{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\TimeSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport roundToNearest5 from \"../services/math/roundToNearest5\";\nimport { addHours, nToNN } from \"../services/time/timeService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeSelector = function TimeSelector(_ref) {\n  _s();\n\n  var onChangeHour = _ref.onChangeHour,\n      onChangeMinute = _ref.onChangeMinute;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  onChangeHour(date.getHours());\n  onChangeMinute(date.getMinutes());\n\n  var _useState3 = useState(date),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedHour = _useState4[0],\n      setSelectedHour = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      availableMinutes = _useState6[0],\n      setAvailableMinutes = _useState6[1];\n\n  var pollTime = setInterval(function () {\n    var curDate = new Date();\n\n    if (curDate.getMinutes() !== date.getMinutes()) {\n      clearInterval(pollTime);\n      setDate(new Date());\n    }\n  }, 1000);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      // To ensure that if the clock is for example 19:55, you can only start selecting from 20:00 and up\n      if (date.getMinutes() + 5 >= 55) {\n        setSelectedHour(date.getHours() + 1);\n      }\n\n      updateAvailableMinutes();\n    }\n\n    return function () {\n      clearInterval(pollTime);\n      isMounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      updateAvailableMinutes();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [selectedHour]);\n\n  var updateAvailableMinutes = function updateAvailableMinutes() {\n    var avail = []; // DO NOT CHANGE TO ==\n\n    switch (date.getHours() == selectedHour.getHours()) {\n      case true:\n        for (var i = roundToNearest5(date.getMinutes()) + 5; i < 60; i += 5) {\n          avail.push(i);\n        }\n\n        setAvailableMinutes(avail);\n        break;\n\n      default:\n        for (var _i = 0; _i < 60; _i += 5) {\n          avail.push(_i);\n        }\n\n        setAvailableMinutes(avail);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeSelectorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        console.log(e.target.value);\n        setSelectedHour(e);\n        onChangeHour(e.target.value);\n      },\n      style: {\n        width: \"33%\"\n      },\n      name: \"hour\",\n      children: date.getMinutes() + 5 >= 55 ? _toConsumableArray(Array(9).keys()).map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: addHours(date, x + 1),\n          children: nToNN(addHours(date, x + 1).getHours())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, _this);\n      }) : _toConsumableArray(Array(9).keys()).map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: addHours(date, x),\n          children: nToNN(addHours(date, x).getHours())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"inline-block\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      },\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        return onChangeMinute(e.target.value);\n      },\n      style: {\n        width: \"33%\"\n      },\n      name: \"minute\",\n      children: availableMinutes !== null ? availableMinutes.map(function (minute) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: minute,\n          children: nToNN(minute)\n        }, minute, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, _this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeSelector, \"AALpsgahOin6up6IJYr5Rpga5jc=\");\n\n_c = TimeSelector;\nexport default TimeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSelector\");","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/components/TimeSelector.js"],"names":["React","useEffect","useRef","useState","roundToNearest5","addHours","nToNN","TimeSelector","onChangeHour","onChangeMinute","Date","date","setDate","getHours","getMinutes","selectedHour","setSelectedHour","availableMinutes","setAvailableMinutes","pollTime","setInterval","curDate","clearInterval","isMounted","updateAvailableMinutes","avail","i","push","e","console","log","target","value","width","Array","keys","map","x","display","marginLeft","marginRight","minute"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport roundToNearest5 from \"../services/math/roundToNearest5\";\r\nimport {addHours, nToNN} from \"../services/time/timeService\";\r\n\r\nconst TimeSelector = ({onChangeHour, onChangeMinute}) => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    onChangeHour(date.getHours());\r\n    onChangeMinute(date.getMinutes());\r\n\r\n    const [selectedHour, setSelectedHour] = useState(date);\r\n    const [availableMinutes, setAvailableMinutes] = useState(null);\r\n\r\n    const pollTime = setInterval(() => {\r\n        const curDate = new Date();\r\n        if (curDate.getMinutes() !== date.getMinutes()) {\r\n            clearInterval(pollTime);\r\n            setDate(new Date());\r\n        }\r\n    }, 1000);\r\n\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            // To ensure that if the clock is for example 19:55, you can only start selecting from 20:00 and up\r\n            if(date.getMinutes() + 5 >= 55) {\r\n                setSelectedHour(date.getHours() + 1);\r\n            }\r\n            updateAvailableMinutes();\r\n        }\r\n\r\n        return (() => {\r\n            clearInterval(pollTime);\r\n            isMounted = false;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            updateAvailableMinutes();\r\n        }\r\n\r\n        return (() => {\r\n            isMounted = false;\r\n        })\r\n\r\n    }, [selectedHour]);\r\n\r\n    const updateAvailableMinutes = () => {\r\n        let avail = [];\r\n        // DO NOT CHANGE TO ==\r\n        switch(date.getHours() == selectedHour.getHours()) {\r\n            case true:\r\n                for(let i = roundToNearest5(date.getMinutes()) + 5; i < 60; i+=5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n            default:\r\n                for(let i = 0; i < 60; i += 5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"timeSelectorContainer\">\r\n            <select onChange={(e) => {\r\n                console.log(e.target.value);\r\n                setSelectedHour(e)\r\n                onChangeHour(e.target.value);\r\n            }} style={{width: \"33%\"}} name=\"hour\">\r\n                {date.getMinutes() + 5 >= 55 ?\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(date, x + 1)}>{nToNN(addHours(date, x + 1).getHours())}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(date, x)}>{nToNN(addHours(date, x).getHours())}</option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n            <h3 style={{display: \"inline-block\", marginLeft: \"3%\", marginRight: \"3%\"}}>:</h3>\r\n            <select onChange={(e) => onChangeMinute(e.target.value)} style={{width: \"33%\"}} name=\"minute\">\r\n                {availableMinutes !== null ?\r\n                    availableMinutes.map((minute) => {\r\n                        return (\r\n                            <option key={minute} value={minute}>{nToNN(minute)}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    null\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;"]},"metadata":{},"sourceType":"module"}