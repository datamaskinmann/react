{"ast":null,"code":"import _objectSpread from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport '../stylesheets/Form&Input&Select.css';\nimport '../stylesheets/LoginPage.css';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport { authUser, loginUser } from \"../actions/userActions\";\nimport { fetchChargers } from \"../services/charger/fetchChargersService\";\n/**\r\n *\r\n * Login side for innlogging i applikasjonen.\r\n * Ved riktig login hentes JWT og brukerID og legges inn i localstorage\r\n * Ved feil i brukernavn/passord eller andre feil vises passende feilmelding\r\n * @author Magnus & Håkon\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LoginPage = function LoginPage(props) {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError,\n      errors = _useForm.formState.errors;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (props.auth.loginError) {\n      if (props.auth.loginError.response) {\n        setError(\"password\", {\n          type: \"validate user\",\n          message: \"Feil e-mail eller passord\"\n        });\n      } else if (props.auth.loginError.request) {\n        setError(\"password\", {\n          type: \"validate email\",\n          message: \"Nettverksfeil. Sjekk din tilkobling og pr\\xF8v igjen\"\n        });\n      } else {\n        setError(\"password\", {\n          type: \"validate email\",\n          message: \"Nettverksfeil. Sjekk din tilkobling og pr\\xF8v igjen\"\n        });\n      }\n    }\n  }, [props.auth.loginError]);\n  /**\r\n   * Metode for å håndtere trykk på submit.\r\n   * Passerer data til loginUser\r\n   * Forsøker å autorisere bruker etterpå\r\n   * @param data - data fra login-skjema\r\n   * @param e - event (at knappen trykkes på). PreventDefault forhindrer rerendering av siden.\r\n   * @return void\r\n   * @memberOf LoginPage\r\n   */\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, e) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = {\n                email: data.email,\n                pwd: data.password\n              };\n              e.preventDefault();\n              _context.next = 4;\n              return dispatch(loginUser(user));\n\n            case 4:\n              _context.next = 6;\n              return dispatch(authUser());\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (props.auth.isAuthenticated) {\n    authUser();\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logg inn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        className: \"loginField\",\n        placeholder: \"E-mail\"\n      }, register(\"email\", {\n        required: \"Vennlist inntast e-mailadresse\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formErrorField\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"email\",\n          render: function render(_ref2) {\n            var message = _ref2.message;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 87\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        className: \"loginField\",\n        type: \"password\",\n        placeholder: \"Passord\"\n      }, register(\"password\", {\n        required: \"Vennligst inntast passord\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formErrorField\",\n        children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          errors: errors,\n          name: \"password\",\n          render: function render(_ref3) {\n            var message = _ref3.message;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 90\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \" LOGG INN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/password_reset\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Glemt passord?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/registration\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ikke registrert bruker? Opprett bruker her!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoginPage, \"y60kNuS2Bh2rPVperAy2Ilh2wqs=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = LoginPage;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Svennærn/Desktop/laddel-mvp/frontend/src/pages/LoginPage.js"],"names":["React","useEffect","useForm","ErrorMessage","Link","Redirect","useDispatch","connect","authUser","loginUser","fetchChargers","LoginPage","props","register","handleSubmit","setError","errors","formState","dispatch","auth","loginError","response","type","message","request","onSubmit","data","e","user","email","pwd","password","preventDefault","isAuthenticated","required","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {ErrorMessage} from \"@hookform/error-message\";\r\n\r\nimport '../stylesheets/Form&Input&Select.css'\r\nimport '../stylesheets/LoginPage.css';\r\n\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {authUser, loginUser} from \"../actions/userActions\";\r\nimport {fetchChargers} from \"../services/charger/fetchChargersService\";\r\n\r\n/**\r\n *\r\n * Login side for innlogging i applikasjonen.\r\n * Ved riktig login hentes JWT og brukerID og legges inn i localstorage\r\n * Ved feil i brukernavn/passord eller andre feil vises passende feilmelding\r\n * @author Magnus & Håkon\r\n */\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const {register, handleSubmit, setError, formState: {errors}} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (props.auth.loginError) {\r\n            if (props.auth.loginError.response) {\r\n                setError(\"password\", {\r\n                    type: \"validate user\",\r\n                    message: `Feil e-mail eller passord`\r\n                });\r\n            } else if (props.auth.loginError.request) {\r\n                setError(\"password\", {\r\n                    type: \"validate email\",\r\n                    message: `Nettverksfeil. Sjekk din tilkobling og prøv igjen`\r\n                });\r\n            } else {\r\n                setError(\"password\", {\r\n                    type: \"validate email\",\r\n                    message: `Nettverksfeil. Sjekk din tilkobling og prøv igjen`\r\n                });\r\n            }\r\n        }\r\n\r\n    }, [props.auth.loginError]);\r\n\r\n    /**\r\n     * Metode for å håndtere trykk på submit.\r\n     * Passerer data til loginUser\r\n     * Forsøker å autorisere bruker etterpå\r\n     * @param data - data fra login-skjema\r\n     * @param e - event (at knappen trykkes på). PreventDefault forhindrer rerendering av siden.\r\n     * @return void\r\n     * @memberOf LoginPage\r\n     */\r\n\r\n    const onSubmit = async (data, e) => {\r\n        const user = {\r\n            email: data.email,\r\n            pwd: data.password\r\n        }\r\n        e.preventDefault();\r\n        await dispatch(loginUser(user));\r\n        await dispatch(authUser());\r\n    }\r\n    if (props.auth.isAuthenticated) {\r\n        authUser();\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"formBox\">\r\n            <h3>Logg inn</h3>\r\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input className=\"loginField\"\r\n                       placeholder=\"E-mail\" {...register(\"email\", {required: \"Vennlist inntast e-mailadresse\"})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"email\" render={({message}) => <p>{message}</p>}/>\r\n                </div>\r\n                <input className=\"loginField\" type=\"password\"\r\n                       placeholder=\"Passord\" {...register(\"password\", {required: \"Vennligst inntast passord\"})} />\r\n                <div className=\"formErrorField\">\r\n                    <ErrorMessage errors={errors} name=\"password\" render={({message}) => <p>{message}</p>}/>\r\n                </div>\r\n                <button className=\"button\" type=\"submit\"> LOGG INN</button>\r\n            </form>\r\n            <div className=\"column\">\r\n                <Link to=\"/password_reset\">\r\n                    <h5>Glemt passord?</h5>\r\n                </Link>\r\n                    <Link to=\"/registration\">\r\n                        <h5>Ikke registrert bruker? Opprett bruker her!</h5>\r\n                    </Link>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}