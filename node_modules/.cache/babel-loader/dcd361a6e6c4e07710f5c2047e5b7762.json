{"ast":null,"code":"import _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\ChargerMarker.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Marker, Popup } from \"react-leaflet\";\nimport { Link } from \"react-router-dom\";\nimport getChargerOperatingMode from \"../services/charger/getChargerOperatingMode\";\nimport { STATES } from \"../misc/constants\";\nimport { iconAvailable, iconUnavailable } from \"../misc/leafletIcons\";\n/**\r\n * A prototype that converts a date object to DDMMHHMM format\r\n * @return {string} a Date in DDMMHHMM string format\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nDate.prototype.ddmmhhmm = function () {\n  return (this.getDate() < 10 ? \"0\" + this.getDate() : this.getDate()) + \"/\" + (this.getMonth() + 1 < 10 ? \"0\" + (this.getMonth() + 1) : this.getMonth() + 1) + \" \" + (this.getHours() < 10 ? \"0\" + this.getHours() : this.getHours()) + \":\" + (this.getMinutes() < 10 ? \"0\" + this.getMinutes() : this.getMinutes());\n};\n/**\r\n * @author Sven\r\n * @version 06/08/2021\r\n * A component for placing a marker on a map\r\n * @param props {address, active, chargerName, city, id, latitude, longitude, postalCode, scheduledEnd}\r\n */\n\n\nvar ChargerMarker = function ChargerMarker(props) {\n  _s();\n\n  var _useState = useState(props.active),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    eventHandlers: {\n      click: function click(e) {\n        // Event handler for when you click on a marker\n        getChargerOperatingMode(props.id).then(function (x) {\n          // Fetch the charger's operating mode\n          if (x !== STATES.NOCARCONNECTED && active !== 1) {\n            setActive(1);\n          }\n        });\n      }\n    },\n    icon: props.active === 0 ? iconAvailable : iconUnavailable,\n    zIndexOffset: props.active === 0 ? 1 : 0 // Render chargers that are available on top of unavailable chargers\n    ,\n    position: [props.latitude, props.longitude],\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"laddelGreen\",\n          children: props.chargerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.address + \", \" + props.postalCode + \" \" + props.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, _this), active === 1 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Laderen er reservert til \", props.scheduledEnd.ddmmhhmm()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, _this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Laderen er ledig\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 89\n        }, _this), active === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick(e) {\n            return props.onReserveClick(e);\n          },\n          className: \"popupButton\",\n          children: \"Reserver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChargerMarker, \"8Pty4fqUBVN6mzSxG5slm+yyhag=\");\n\n_c = ChargerMarker;\nexport default ChargerMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChargerMarker\");","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/components/ChargerMarker.js"],"names":["React","useState","Marker","Popup","Link","getChargerOperatingMode","STATES","iconAvailable","iconUnavailable","Date","prototype","ddmmhhmm","getDate","getMonth","getHours","getMinutes","ChargerMarker","props","active","setActive","click","e","id","then","x","NOCARCONNECTED","latitude","longitude","chargerName","address","postalCode","city","scheduledEnd","onReserveClick"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Marker, Popup} from \"react-leaflet\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport getChargerOperatingMode from \"../services/charger/getChargerOperatingMode\";\r\n\r\nimport {STATES} from \"../misc/constants\";\r\nimport {iconAvailable, iconUnavailable} from \"../misc/leafletIcons\";\r\n\r\n/**\r\n * A prototype that converts a date object to DDMMHHMM format\r\n * @return {string} a Date in DDMMHHMM string format\r\n */\r\nDate.prototype.ddmmhhmm = function() {\r\n    return (this.getDate() < 10 ? (\"0\" + this.getDate()) : this.getDate()) + \"/\" + ((this.getMonth()+1) < 10 ? (\"0\" + (this.getMonth()+1)) : (this.getMonth()+1)) + \" \" +\r\n        (this.getHours() < 10 ? (\"0\" + this.getHours()) : this.getHours())\r\n        + \":\" + (this.getMinutes() < 10 ? (\"0\" + this.getMinutes()) : this.getMinutes());\r\n}\r\n\r\n/**\r\n * @author Sven\r\n * @version 06/08/2021\r\n * A component for placing a marker on a map\r\n * @param props {address, active, chargerName, city, id, latitude, longitude, postalCode, scheduledEnd}\r\n */\r\nconst ChargerMarker = (props) => {\r\n\r\n    const [active, setActive] = useState(props.active);\r\n\r\n    return (\r\n        <Marker\r\n            eventHandlers={{\r\n            click: (e) => {\r\n                // Event handler for when you click on a marker\r\n                getChargerOperatingMode(props.id).then(x => { // Fetch the charger's operating mode\r\n                    if (x !== STATES.NOCARCONNECTED && active !== 1) {\r\n                        setActive(1);\r\n                    }\r\n                })\r\n            }\r\n        }}\r\n                icon={props.active === 0 ? iconAvailable : iconUnavailable}\r\n                zIndexOffset={props.active === 0 ? 1 : 0} // Render chargers that are available on top of unavailable chargers\r\n                position={[props.latitude, props.longitude]}>\r\n            <Popup>\r\n            <span>\r\n                <h4 className=\"laddelGreen\">{props.chargerName}</h4>\r\n                <h4>{props.address + \", \" + props.postalCode + \" \" + props.city}</h4>\r\n                {active === 1 ?\r\n                    <h4>Laderen er reservert til {props.scheduledEnd.ddmmhhmm()}</h4> : <h4>Laderen er ledig</h4>}\r\n                {active === 0 ?\r\n                        <button onClick={(e) => props.onReserveClick(e)} className=\"popupButton\">Reserver</button>\r\n                     : null}\r\n                                    </span>\r\n            </Popup>\r\n        </Marker>\r\n    )\r\n}\r\n\r\nexport default ChargerMarker;\r\n"]},"metadata":{},"sourceType":"module"}