{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { doPostAsync } from \"../api\";\nimport { ip, tomcatPort } from \"../../misc/constants\";\nimport authHeader from \"../user/auth-header\";\n/**\r\n * @author Sven\r\n * Service that communicates with the backend to start a charger\r\n * @version 09/08/2021\r\n *\r\n */\n\n/**\r\n * Starts a charger\r\n * @param id the charger's id\r\n * @returns {Promise<void>}\r\n */\n\nvar startCharger = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", doPostAsync(\"http://\".concat(ip, \":\").concat(tomcatPort, \"/api/charger/startChargerSession\"), {\n              chargerID: id\n            }, authHeader()));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function startCharger(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { startCharger };","map":{"version":3,"sources":["C:/Users/Svenn√¶rn/Desktop/laddel-mvp/frontend/src/services/charger/startChargingService.js"],"names":["doPostAsync","ip","tomcatPort","authHeader","startCharger","id","chargerID"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,SAASC,EAAT,EAAaC,UAAb,QAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbL,WAAW,kBAAWC,EAAX,cAAiBC,UAAjB,uCACX;AAACI,cAAAA,SAAS,EAAED;AAAZ,aADW,EACMF,UAAU,EADhB,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAKA,SAAQA,YAAR","sourcesContent":["import { doPostAsync } from \"../api\";\r\nimport { ip, tomcatPort } from \"../../misc/constants\";\r\nimport authHeader from \"../user/auth-header\";\r\n\r\n/**\r\n * @author Sven\r\n * Service that communicates with the backend to start a charger\r\n * @version 09/08/2021\r\n *\r\n */\r\n\r\n/**\r\n * Starts a charger\r\n * @param id the charger's id\r\n * @returns {Promise<void>}\r\n */\r\nconst startCharger = async (id) => {\r\n return doPostAsync(`http://${ip}:${tomcatPort}/api/charger/startChargerSession`,\r\n        {chargerID: id}, authHeader());\r\n}\r\n\r\nexport {startCharger};"]},"metadata":{},"sourceType":"module"}