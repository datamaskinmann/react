{"ast":null,"code":"import { doPostAsync } from \"../api\";\nimport authHeader from \"../user/auth-header\";\nimport { ip, tomcatPort } from '../../misc/constants';\n\nvar getChargerOperatingMode = function getChargerOperatingMode(id) {\n  return new Promise(function (resolve, reject) {\n    return doPostAsync(\"http://\".concat(ip, \":\").concat(tomcatPort, \"/api/charger/getOperatingMode\"), {\n      id: id\n    }, authHeader()).then(function (x) {\n      resolve(x.data.operatingMode);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n};\n\nexport default getChargerOperatingMode;","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/services/charger/getChargerOperatingMode.js"],"names":["doPostAsync","authHeader","ip","tomcatPort","getChargerOperatingMode","id","Promise","resolve","reject","then","x","data","operatingMode","catch","error"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,QAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,EAAR,EAAYC,UAAZ,QAA6B,sBAA7B;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,EAAD,EAAQ;AACpC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WACfR,WAAW,kBAAWE,EAAX,cAAiBC,UAAjB,oCAA4D;AAACE,MAAAA,EAAE,EAAEA;AAAL,KAA5D,EAAsEJ,UAAU,EAAhF,CAAX,CAA+FQ,IAA/F,CAAoG,UAAAC,CAAC,EAAI;AACrGH,MAAAA,OAAO,CAACG,CAAC,CAACC,IAAF,CAAOC,aAAR,CAAP;AACH,KAFD,EAEGC,KAFH,CAES,UAACC,KAAD,EAAW;AAChBN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACH,KAJD,CADe;AAAA,GAAZ,CAAP;AAMH,CAPD;;AASA,eAAeV,uBAAf","sourcesContent":["import {doPostAsync} from \"../api\";\r\nimport authHeader from \"../user/auth-header\";\r\nimport {ip, tomcatPort} from '../../misc/constants';\r\n\r\nconst getChargerOperatingMode = (id) => {\r\n    return new Promise((resolve, reject) =>\r\n        doPostAsync(`http://${ip}:${tomcatPort}/api/charger/getOperatingMode`, {id: id}, authHeader()).then(x => {\r\n            resolve(x.data.operatingMode);\r\n        }).catch((error) => {\r\n            reject(error);\r\n        }));\r\n}\r\n\r\nexport default getChargerOperatingMode;"]},"metadata":{},"sourceType":"module"}