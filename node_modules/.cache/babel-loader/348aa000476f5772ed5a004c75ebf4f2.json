{"ast":null,"code":"import _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { MapConsumer, MapContainer, TileLayer } from 'react-leaflet';\nimport { Geolocation } from \"../services/geo/geoService\";\nimport ChargerMarker from \"./ChargerMarker\";\nimport 'leaflet/dist/leaflet.css';\nimport '../stylesheets/Map.css';\nimport { startCharger } from \"../services/charger/startChargingService\";\nimport ConfirmOverlay from \"./ConfirmOverlay\";\nimport Overlay from \"./Overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nDate.prototype.addHours = function (h) {\n  this.setTime(this.getTime() + h * 60 * 60 * 1000);\n  return this;\n};\n\nDate.prototype.addMinutes = function (h) {\n  this.setTime(this.getTime() + h * 60 * 1000);\n  return this;\n};\n/**\r\n * @author Magnus & Sven\r\n * @version 06/08/2021\r\n * Map for display and selection of chargers.\r\n * @param props\r\n * @component\r\n */\n\n\nvar Map = function Map(props) {\n  _s();\n\n  var _useState = useState([61.77735134683034, 9.350803488192016]),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      overlay = _useState4[0],\n      setOverlay = _useState4[1];\n  /**\r\n   * Retrieves position of device on render.\r\n   * @returns function\r\n   * @memberOf Map\r\n   */\n\n\n  useEffect(function () {\n    var isMounted = true;\n    Geolocation().then(function (loc) {\n      if (isMounted) setLocation([loc.coords.latitude, loc.coords.longitude]);\n    }).catch(function (error) {\n      console.log(error.message);\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n\n  var _handleClickReserve = function handleClickReserve(e) {\n    setOverlay( /*#__PURE__*/_jsxDEV(ConfirmOverlay, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Er du sikker p\\xE5 at du vil reservere?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Du vil ha muligheten til \\xE5 starte laderen innen 15 min\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Tjenesten medf\\xF8rer et reservasjonsgebyr p\\xE5 10 kr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 76\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 45\n      }, _this),\n      onClickClose: function onClickClose() {\n        return setOverlay(null);\n      },\n      onClickCancel: function onClickCancel() {\n        return setOverlay(null);\n      },\n      onClickAccept: function onClickAccept() {\n        setOverlay( /*#__PURE__*/_jsxDEV(Overlay, {\n          content: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center confirmOverlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: setOverlay(null),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 52\n            }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Vi fikk penga, bro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 52\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkMarkVerify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 52\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 48\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 44\n        }, _this));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, _this));\n    /*\r\n    startCharger(e).then(x => {\r\n        console.log(x);\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [overlay, /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: location,\n      zoom: 7,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(MapConsumer, {\n        children: function children(map) {\n          map.setView(location, map.getZoom());\n          return null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this), props.chargers.map(function (charger) {\n        return /*#__PURE__*/_jsxDEV(ChargerMarker, {\n          id: charger.chargerId // The date from the database is in UTC format, convert to the user's timezone\n          ,\n          scheduledEnd: charger.scheduledEnd != null ? new Date(charger.scheduledEnd).addMinutes(new Date().getTimezoneOffset()) : null,\n          chargerName: charger.chargerName,\n          active: charger.active,\n          latitude: charger.latitude,\n          longitude: charger.longitude,\n          ownerUname: charger.ownerUname,\n          address: charger.address,\n          postalCode: charger.postalCode,\n          city: charger.city,\n          handleClickReserve: function handleClickReserve(e) {\n            return _handleClickReserve(e);\n          }\n        }, charger.chargerId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Map, \"e6iI7NfSHhZWAkBlfMNxOxa/mRU=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Svenn√¶rn/Desktop/laddel-mvp/frontend/src/components/Map.js"],"names":["React","useEffect","useState","MapConsumer","MapContainer","TileLayer","Geolocation","ChargerMarker","startCharger","ConfirmOverlay","Overlay","Date","prototype","addHours","h","setTime","getTime","addMinutes","Map","props","location","setLocation","overlay","setOverlay","isMounted","then","loc","coords","latitude","longitude","catch","error","console","log","message","handleClickReserve","e","map","setView","getZoom","chargers","charger","chargerId","scheduledEnd","getTimezoneOffset","chargerName","active","ownerUname","address","postalCode","city"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {MapConsumer, MapContainer, TileLayer} from 'react-leaflet';\r\n\r\nimport {Geolocation} from \"../services/geo/geoService\";\r\n\r\nimport ChargerMarker from \"./ChargerMarker\";\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport '../stylesheets/Map.css';\r\nimport {startCharger} from \"../services/charger/startChargingService\";\r\nimport ConfirmOverlay from \"./ConfirmOverlay\";\r\nimport Overlay from \"./Overlay\";\r\n\r\nDate.prototype.addHours = function (h) {\r\n    this.setTime(this.getTime() + (h * 60 * 60 * 1000));\r\n    return this;\r\n}\r\n\r\nDate.prototype.addMinutes = function (h) {\r\n    this.setTime(this.getTime() + (h * 60 * 1000));\r\n    return this;\r\n}\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * @version 06/08/2021\r\n * Map for display and selection of chargers.\r\n * @param props\r\n * @component\r\n */\r\n\r\nconst Map = (props) => {\r\n\r\n    const [location, setLocation] = useState([61.77735134683034, 9.350803488192016]);\r\n    const [overlay, setOverlay] = useState(null);\r\n\r\n    /**\r\n     * Retrieves position of device on render.\r\n     * @returns function\r\n     * @memberOf Map\r\n     */\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        Geolocation\r\n        ().then((loc) => {\r\n            if (isMounted) setLocation([loc.coords.latitude, loc.coords.longitude]);\r\n        }).catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n        return () => {\r\n            isMounted = false\r\n        };\r\n    }, []);\r\n\r\n    const handleClickReserve = (e) => {\r\n        setOverlay(<ConfirmOverlay content={<div>\r\n            <h3>Er du sikker p√• at du vil reservere?</h3>\r\n            <h5>Du vil ha muligheten til √• starte laderen innen 15 min</h5><h5>Tjenesten medf√∏rer et reservasjonsgebyr\r\n            p√• 10 kr</h5></div>}\r\n                                   onClickClose={() => setOverlay(null)}\r\n                                   onClickCancel={() => setOverlay(null)}\r\n                                   onClickAccept={() => {\r\n                                       setOverlay(\r\n                                           <Overlay content={\r\n                                               <div className=\"center confirmOverlay\">\r\n                                                   <span className=\"close\" onClick={setOverlay(null)}>x</span>\r\n                                                   <h3>Vi fikk penga, bro</h3>\r\n                                                   <span className=\"checkMarkVerify\"/>\r\n                                               </div>}/>);\r\n                                   }}\r\n        />);\r\n        /*\r\n        startCharger(e).then(x => {\r\n            console.log(x);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });*/\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            {overlay}\r\n            <MapContainer center={location} zoom={7} scrollWheelZoom={true}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                />\r\n                <MapConsumer>\r\n                    {(map) => {\r\n                        map.setView(location, map.getZoom());\r\n                        return null;\r\n                    }}\r\n                </MapConsumer>\r\n                {props.chargers.map((charger) =>\r\n                    <ChargerMarker key={charger.chargerId}\r\n                                   id={charger.chargerId}\r\n                        // The date from the database is in UTC format, convert to the user's timezone\r\n                                   scheduledEnd={charger.scheduledEnd != null ? new Date(charger.scheduledEnd).addMinutes(new Date().getTimezoneOffset()) : null}\r\n                                   chargerName={charger.chargerName}\r\n                                   active={charger.active}\r\n                                   latitude={charger.latitude}\r\n                                   longitude={charger.longitude}\r\n                                   ownerUname={charger.ownerUname}\r\n                                   address={charger.address}\r\n                                   postalCode={charger.postalCode}\r\n                                   city={charger.city}\r\n                                   handleClickReserve={(e) => handleClickReserve(e)}\r\n                    />\r\n                )}\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}