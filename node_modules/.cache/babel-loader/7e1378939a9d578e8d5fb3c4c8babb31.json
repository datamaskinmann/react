{"ast":null,"code":"var doRequest = function doRequest(method, url) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n\n    xhr.onerror = function () {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText\n      });\n    };\n\n    xhr.send();\n  });\n};\n\nexport default doRequest;","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/services/http/http.js"],"names":["doRequest","method","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","statusText","onerror","send"],"mappings":"AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAASC,GAAT,EAAiB;AAC/B,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAASP,MAAT,EAAiBC,GAAjB;;AACAI,IAAAA,GAAG,CAACG,MAAJ,GAAa,YAAY;AACrB,UAAI,KAAKC,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAAxC,EAA6C;AACzCN,QAAAA,OAAO,CAACE,GAAG,CAACK,QAAL,CAAP;AACH,OAFD,MAEO;AACHN,QAAAA,MAAM,CAAC;AACHK,UAAAA,MAAM,EAAE,KAAKA,MADV;AAEHE,UAAAA,UAAU,EAAEN,GAAG,CAACM;AAFb,SAAD,CAAN;AAIH;AACJ,KATD;;AAUAN,IAAAA,GAAG,CAACO,OAAJ,GAAc,YAAY;AACtBR,MAAAA,MAAM,CAAC;AACHK,QAAAA,MAAM,EAAE,KAAKA,MADV;AAEHE,QAAAA,UAAU,EAAEN,GAAG,CAACM;AAFb,OAAD,CAAN;AAIH,KALD;;AAMAN,IAAAA,GAAG,CAACQ,IAAJ;AACH,GApBM,CAAP;AAqBH,CAtBD;;AAwBA,eAAed,SAAf","sourcesContent":["const doRequest = (method, url) => {\r\n    return new Promise(function (resolve, reject) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onload = function () {\r\n            if (this.status >= 200 && this.status < 300) {\r\n                resolve(xhr.response);\r\n            } else {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            reject({\r\n                status: this.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        xhr.send();\r\n    });\r\n}\r\n\r\nexport default doRequest;"]},"metadata":{},"sourceType":"module"}