{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\TimeSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport roundToNearest5 from \"../services/math/roundToNearest5\";\nimport { addHours, dateToHHMM, nToNN } from \"../services/time/timeService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeSelector = function TimeSelector(_ref) {\n  _s();\n\n  var onChangeHour = _ref.onChangeHour,\n      onChangeMinute = _ref.onChangeMinute;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      availableMinutes = _useState4[0],\n      setAvailableMinutes = _useState4[1];\n\n  var _useState5 = useState(date.getHours()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedHour = _useState6[0],\n      setSelectedHour = _useState6[1];\n\n  var _useState7 = useState(date.getMinutes()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedMinute = _useState8[0],\n      setSelectedMinute = _useState8[1];\n\n  var selectedDate = useRef(new Date());\n  assembleDate();\n\n  var assembleDate = function assembleDate() {\n    selectedDate.current.setHours(selectedHour);\n    selectedDate.current.setMinutes(selectedMinute);\n  };\n\n  var pollTime = setInterval(function () {\n    var curDate = new Date();\n\n    if (curDate.getMinutes() !== date.getMinutes()) {\n      clearInterval(pollTime);\n      setDate(new Date());\n    }\n  }, 1000);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      // To ensure that if the clock is for example 19:55, you can only start selecting from 20:00 and up\n      setSelectedHour(date.getHours() + 1);\n      setSelectedMinute(0);\n      updateAvailableMinutes();\n    }\n\n    return function () {\n      clearInterval(pollTime);\n      isMounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      updateAvailableMinutes();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [selectedHour]);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      assembleDate();\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [selectedHour, selectedMinute]);\n\n  var updateAvailableMinutes = function updateAvailableMinutes() {\n    var avail = []; // DO NOT CHANGE TO ==\n\n    switch (date.getHours() === selectedHour) {\n      case true:\n        for (var i = roundToNearest5(date.getMinutes()) + 5; i < 60; i += 5) {\n          avail.push(i);\n        }\n\n        setAvailableMinutes(avail);\n        break;\n\n      default:\n        for (var _i = 0; _i < 60; _i += 5) {\n          avail.push(_i);\n        }\n\n        setAvailableMinutes(avail);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeSelectorContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        setSelectedHour(e.target.value);\n      },\n      style: {\n        width: \"33%\"\n      },\n      name: \"hour\",\n      children: date.getMinutes() + 5 >= 55 ? _toConsumableArray(Array(9).keys()).map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: addHours(date, x + 1).getHours(),\n          children: nToNN(addHours(date, x + 1).getHours())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, _this);\n      }) : _toConsumableArray(Array(9).keys()).map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: addHours(date, x).getHours(),\n          children: nToNN(addHours(date, x).getHours())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"inline-block\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      },\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        setSelectedMinute(e.target.value);\n      },\n      style: {\n        width: \"33%\"\n      },\n      name: \"minute\",\n      children: availableMinutes !== null ? availableMinutes.map(function (minute) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: minute,\n          children: nToNN(minute)\n        }, minute, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, _this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeSelector, \"nb93yhb5OFULefU23dtgxUaR9Zg=\");\n\n_c = TimeSelector;\nexport default TimeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSelector\");","map":{"version":3,"sources":["C:/Users/Svenn√¶rn/Desktop/laddel-mvp/frontend/src/components/TimeSelector.js"],"names":["React","useEffect","useRef","useState","roundToNearest5","addHours","dateToHHMM","nToNN","TimeSelector","onChangeHour","onChangeMinute","Date","date","setDate","availableMinutes","setAvailableMinutes","getHours","selectedHour","setSelectedHour","getMinutes","selectedMinute","setSelectedMinute","selectedDate","assembleDate","current","setHours","setMinutes","pollTime","setInterval","curDate","clearInterval","isMounted","updateAvailableMinutes","avail","i","push","e","target","value","width","Array","keys","map","x","display","marginLeft","marginRight","minute"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,KAA9B,QAA0C,8BAA1C;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoC;AAAA;;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;;AAErD,kBAAwBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,mBAAgDV,QAAQ,CAAC,IAAD,CAAxD;AAAA;AAAA,MAAOW,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAAwCZ,QAAQ,CAACS,IAAI,CAACI,QAAL,EAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA4Cf,QAAQ,CAACS,IAAI,CAACO,UAAL,EAAD,CAApD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,YAAY,GAAGpB,MAAM,CAAC,IAAIS,IAAJ,EAAD,CAA3B;AAEAY,EAAAA,YAAY;;AAEZ,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBD,IAAAA,YAAY,CAACE,OAAb,CAAqBC,QAArB,CAA8BR,YAA9B;AACAK,IAAAA,YAAY,CAACE,OAAb,CAAqBE,UAArB,CAAgCN,cAAhC;AAGH,GALD;;AAQA,MAAMO,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC/B,QAAMC,OAAO,GAAG,IAAIlB,IAAJ,EAAhB;;AACA,QAAIkB,OAAO,CAACV,UAAR,OAAyBP,IAAI,CAACO,UAAL,EAA7B,EAAgD;AAC5CW,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAd,MAAAA,OAAO,CAAC,IAAIF,IAAJ,EAAD,CAAP;AACH;AACJ,GAN2B,EAMzB,IANyB,CAA5B;AASAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI8B,SAAS,GAAG,IAAhB;;AAGA,QAAGA,SAAH,EAAc;AACV;AACAb,MAAAA,eAAe,CAACN,IAAI,CAACI,QAAL,KAAkB,CAAnB,CAAf;AACAK,MAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAW,MAAAA,sBAAsB;AACzB;;AAED,WAAQ,YAAM;AACVF,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAI,MAAAA,SAAS,GAAG,KAAZ;AACH,KAHD;AAIH,GAfQ,EAeN,EAfM,CAAT;AAiBA9B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI8B,SAAS,GAAG,IAAhB;;AAEA,QAAGA,SAAH,EAAc;AACVC,MAAAA,sBAAsB;AACzB;;AAED,WAAQ,YAAM;AACVD,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;AAIH,GAXQ,EAWN,CAACd,YAAD,CAXM,CAAT;AAaAhB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI8B,SAAS,GAAG,IAAhB;;AAEA,QAAGA,SAAH,EAAc;AACVR,MAAAA,YAAY;AACf;;AAED,WAAQ,YAAM;AACVQ,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;AAGH,GAVQ,EAUN,CAACd,YAAD,EAAeG,cAAf,CAVM,CAAT;;AAYA,MAAMY,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC,QAAIC,KAAK,GAAG,EAAZ,CADiC,CAEjC;;AACA,YAAOrB,IAAI,CAACI,QAAL,OAAoBC,YAA3B;AACI,WAAK,IAAL;AACI,aAAI,IAAIiB,CAAC,GAAG9B,eAAe,CAACQ,IAAI,CAACO,UAAL,EAAD,CAAf,GAAqC,CAAjD,EAAoDe,CAAC,GAAG,EAAxD,EAA4DA,CAAC,IAAE,CAA/D,EAAkE;AAC9DD,UAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACDnB,QAAAA,mBAAmB,CAACkB,KAAD,CAAnB;AACA;;AACJ;AACI,aAAI,IAAIC,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAG,EAAnB,EAAuBA,EAAC,IAAI,CAA5B,EAA+B;AAC3BD,UAAAA,KAAK,CAACE,IAAN,CAAWD,EAAX;AACH;;AACDnB,QAAAA,mBAAmB,CAACkB,KAAD,CAAnB;AACA;AAZR;AAcH,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACI;AAAQ,MAAA,QAAQ,EAAE,kBAACG,CAAD,EAAO;AACrBlB,QAAAA,eAAe,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,OAFD;AAEG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAFV;AAE0B,MAAA,IAAI,EAAC,MAF/B;AAAA,gBAGK3B,IAAI,CAACO,UAAL,KAAoB,CAApB,IAAyB,EAAzB,GACG,mBAAIqB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAAAC,CAAC,EAAI;AAC1B,4BACI;AAAQ,UAAA,KAAK,EAAEtC,QAAQ,CAACO,IAAD,EAAO+B,CAAC,GAAG,CAAX,CAAR,CAAsB3B,QAAtB,EAAf;AAAA,oBAAkDT,KAAK,CAACF,QAAQ,CAACO,IAAD,EAAO+B,CAAC,GAAG,CAAX,CAAR,CAAsB3B,QAAtB,EAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJD,CADH,GAOG,mBAAIwB,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAAAC,CAAC,EAAI;AAC1B,4BACI;AAAQ,UAAA,KAAK,EAAEtC,QAAQ,CAACO,IAAD,EAAO+B,CAAP,CAAR,CAAkB3B,QAAlB,EAAf;AAAA,oBAA8CT,KAAK,CAACF,QAAQ,CAACO,IAAD,EAAO+B,CAAP,CAAR,CAAkB3B,QAAlB,EAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJD;AAVR;AAAA;AAAA;AAAA;AAAA,aADJ,eAkBI;AAAI,MAAA,KAAK,EAAE;AAAC4B,QAAAA,OAAO,EAAE,cAAV;AAA0BC,QAAAA,UAAU,EAAE,IAAtC;AAA4CC,QAAAA,WAAW,EAAE;AAAzD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBJ,eAmBI;AAAQ,MAAA,QAAQ,EAAE,kBAACV,CAAD,EAAO;AACrBf,QAAAA,iBAAiB,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACH,OAFD;AAEG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAFV;AAE0B,MAAA,IAAI,EAAC,QAF/B;AAAA,gBAGKzB,gBAAgB,KAAK,IAArB,GACGA,gBAAgB,CAAC4B,GAAjB,CAAqB,UAACK,MAAD,EAAY;AAC7B,4BACI;AAAqB,UAAA,KAAK,EAAEA,MAA5B;AAAA,oBAAqCxC,KAAK,CAACwC,MAAD;AAA1C,WAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJD,CADH,GAOG;AAVR;AAAA;AAAA;AAAA;AAAA,aAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmCH,CA7HD;;GAAMvC,Y;;KAAAA,Y;AA+HN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport roundToNearest5 from \"../services/math/roundToNearest5\";\r\nimport {addHours, dateToHHMM, nToNN} from \"../services/time/timeService\";\r\n\r\n\r\nconst TimeSelector = ({onChangeHour, onChangeMinute}) => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const [availableMinutes, setAvailableMinutes] = useState(null);\r\n    const [selectedHour, setSelectedHour] = useState(date.getHours());\r\n    const [selectedMinute, setSelectedMinute] = useState(date.getMinutes());\r\n\r\n    const selectedDate = useRef(new Date());\r\n\r\n    assembleDate();\r\n\r\n    const assembleDate = () => {\r\n        selectedDate.current.setHours(selectedHour);\r\n        selectedDate.current.setMinutes(selectedMinute);\r\n\r\n        \r\n    }\r\n\r\n\r\n    const pollTime = setInterval(() => {\r\n        const curDate = new Date();\r\n        if (curDate.getMinutes() !== date.getMinutes()) {\r\n            clearInterval(pollTime);\r\n            setDate(new Date());\r\n        }\r\n    }, 1000);\r\n\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n\r\n        if(isMounted) {\r\n            // To ensure that if the clock is for example 19:55, you can only start selecting from 20:00 and up\r\n            setSelectedHour(date.getHours() + 1);\r\n            setSelectedMinute(0);\r\n            updateAvailableMinutes();\r\n        }\r\n\r\n        return (() => {\r\n            clearInterval(pollTime);\r\n            isMounted = false;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            updateAvailableMinutes();\r\n        }\r\n\r\n        return (() => {\r\n            isMounted = false;\r\n        })\r\n\r\n    }, [selectedHour]);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            assembleDate();\r\n        }\r\n\r\n        return (() => {\r\n            isMounted = false;\r\n        })\r\n    }, [selectedHour, selectedMinute]);\r\n\r\n    const updateAvailableMinutes = () => {\r\n        let avail = [];\r\n        // DO NOT CHANGE TO ==\r\n        switch(date.getHours() === selectedHour) {\r\n            case true:\r\n                for(let i = roundToNearest5(date.getMinutes()) + 5; i < 60; i+=5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n            default:\r\n                for(let i = 0; i < 60; i += 5) {\r\n                    avail.push(i);\r\n                }\r\n                setAvailableMinutes(avail);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"timeSelectorContainer\">\r\n            <select onChange={(e) => {\r\n                setSelectedHour(e.target.value);\r\n            }} style={{width: \"33%\"}} name=\"hour\">\r\n                {date.getMinutes() + 5 >= 55 ?\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(date, x + 1).getHours()}>{nToNN(addHours(date, x + 1).getHours())}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    [...Array(9).keys()].map(x => {\r\n                        return (\r\n                            <option value={addHours(date, x).getHours()}>{nToNN(addHours(date, x).getHours())}</option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n            <h3 style={{display: \"inline-block\", marginLeft: \"3%\", marginRight: \"3%\"}}>:</h3>\r\n            <select onChange={(e) => {\r\n                setSelectedMinute(e.target.value)\r\n            }} style={{width: \"33%\"}} name=\"minute\">\r\n                {availableMinutes !== null ?\r\n                    availableMinutes.map((minute) => {\r\n                        return (\r\n                            <option key={minute} value={minute}>{nToNN(minute)}</option>\r\n                        )\r\n                    })\r\n                    :\r\n                    null\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;"]},"metadata":{},"sourceType":"module"}