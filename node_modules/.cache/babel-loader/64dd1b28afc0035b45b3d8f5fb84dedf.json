{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\TimeSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { addHours, addMinutes, nToNN, pollTime } from '../services/time/timeService';\nimport '../stylesheets/TimeSelector.css';\n/**\r\n * @author Magnus & Sven\r\n *\r\n * Komponent som lar en velge tidspunkt.\r\n * @component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeSelector = function TimeSelector(props) {\n  _s();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  useEffect(function () {\n    /**\r\n     * Metode som setter tid i parent-komponent\r\n     *\r\n     * @memberOf TimeSelector\r\n     * @returns {void}\r\n     */\n    var isMounted = true;\n\n    if (isMounted) {\n      props.setTime(time);\n    }\n\n    return function () {\n      isMounted = false;\n    };\n  }, [props.getTime]);\n  pollTime(time, function (e) {\n    return setTime(e);\n  });\n  var curDate = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"hours\",\n          value: nToNN(curDate.getHours()),\n          children: availableHours.map(function (x) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: nToNN(x),\n              children: nToNN(x)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"minutes\",\n          value: nToNN(curDate.getMinutes()),\n          children: _toConsumableArray(Array(60).keys()).map(function (x) {\n            console.log(x + 1);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeSelector, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n\n_c = TimeSelector;\nexport default TimeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSelector\");","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/components/TimeSelector.js"],"names":["React","useState","useEffect","addHours","addMinutes","nToNN","pollTime","TimeSelector","props","Date","time","setTime","isMounted","getTime","e","curDate","getHours","availableHours","map","x","getMinutes","Array","keys","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,KAA9B,EAAqCC,QAArC,QAAoD,8BAApD;AACA,OAAO,iCAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAE5B,kBAAwBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AAEZ;AACR;AACA;AACA;AACA;AACA;AACQ,QAAIU,SAAS,GAAG,IAAhB;;AAEA,QAAGA,SAAH,EAAc;AACVJ,MAAAA,KAAK,CAACG,OAAN,CAAcD,IAAd;AACH;;AAED,WAAO,YAAM;AACTE,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;AAGH,GAjBQ,EAiBN,CAACJ,KAAK,CAACK,OAAP,CAjBM,CAAT;AAmBAP,EAAAA,QAAQ,CAACI,IAAD,EAAO,UAACI,CAAD;AAAA,WAAOH,OAAO,CAACG,CAAD,CAAd;AAAA,GAAP,CAAR;AAEA,MAAIC,OAAO,GAAG,IAAIN,IAAJ,EAAd;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAEJ,KAAK,CAACU,OAAO,CAACC,QAAR,EAAD,CAAjC;AAAA,oBACKC,cAAc,CAACC,GAAf,CAAmB,UAAAC,CAAC,EAAI;AACrB,gCACI;AAAQ,cAAA,KAAK,EAAEd,KAAK,CAACc,CAAD,CAApB;AAAA,wBAA0Bd,KAAK,CAACc,CAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,qBADJ;AAGH,WAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,eAaI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAEd,KAAK,CAACU,OAAO,CAACK,UAAR,EAAD,CAAnC;AAAA,oBACK,mBAAIC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,EAAsBJ,GAAtB,CAA0B,UAAAC,CAAC,EAAI;AAC5BI,YAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,GAAC,CAAd;AACH,WAFA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AA0BH,CArDD;;GAAMZ,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {addHours, addMinutes, nToNN, pollTime} from '../services/time/timeService'\r\nimport '../stylesheets/TimeSelector.css';\r\n\r\n/**\r\n * @author Magnus & Sven\r\n *\r\n * Komponent som lar en velge tidspunkt.\r\n * @component\r\n */\r\n\r\nconst TimeSelector = (props) => {\r\n\r\n    const [time, setTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n\r\n        /**\r\n         * Metode som setter tid i parent-komponent\r\n         *\r\n         * @memberOf TimeSelector\r\n         * @returns {void}\r\n         */\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            props.setTime(time);\r\n        }\r\n\r\n        return () => {\r\n            isMounted = false;\r\n        }\r\n    }, [props.getTime]);\r\n\r\n    pollTime(time, (e) => setTime(e));\r\n\r\n    let curDate = new Date();\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"timeContainer\">\r\n                <div className=\"column\">\r\n                    <select name=\"hours\" value={nToNN(curDate.getHours())}>\r\n                        {availableHours.map(x => {\r\n                            return (\r\n                                <option value={nToNN(x)}>{nToNN(x)}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n\r\n                <h4>:</h4>\r\n\r\n                <div  className=\"column\">\r\n                    <select name=\"minutes\" value={nToNN(curDate.getMinutes())}>\r\n                        {[...Array(60).keys()].map(x => {\r\n                            console.log(x+1);\r\n                        })}\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;"]},"metadata":{},"sourceType":"module"}