{"ast":null,"code":"import _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\ChargerButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useState, useEffect } from \"react\";\nimport '../stylesheets/ChargerButton.css';\nimport { STATES, getAnimState } from \"../misc/constants\";\nimport loadingIco from '../media/loading.gif';\nimport { login } from \"../services/user/userService\";\n/**\r\n * @author Magnus & Sven\r\n * Start/stop button for Charger\r\n *\r\n * @component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChargerButton = function ChargerButton(_ref) {\n  _s();\n\n  var operatingMode = _ref.operatingMode,\n      _onClick = _ref.onClick,\n      waiting = _ref.waiting;\n\n  var _useState = useState(getAnimState(STATES.WAITING)),\n      _useState2 = _slicedToArray(_useState, 2),\n      animState = _useState2[0],\n      setAnimState = _useState2[1];\n\n  var _useState3 = useState(\"Venter på svar\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statusText = _useState4[0],\n      setStatusText = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disabled = _useState6[0],\n      setDisabled = _useState6[1];\n\n  useEffect(function () {\n    console.log(waiting);\n    /**\r\n     * UseEffect listens to props.chargingState and updates ChargerButton based on that.\r\n     *\r\n     * @param {props.chargingState} int Status of charger\r\n     * @memberOf ChargerButton\r\n     */\n\n    if (operatingMode === STATES.OFFLINE) {\n      setAnimState(getAnimState(STATES.OFFLINE));\n      setStatusText(\"Laderen er ikke på nett\");\n      setDisabled(true);\n    }\n\n    if (operatingMode === STATES.WAITING) {\n      setAnimState(getAnimState(STATES.WAITING));\n      setStatusText(\"Venter på svar\");\n      setDisabled(true);\n    } else if (operatingMode === STATES.CARCONNECTED) {\n      setAnimState(getAnimState(STATES.CARCONNECTED));\n      setStatusText(\"Tilkoblet, start lading\");\n      setDisabled(false);\n    } else if (operatingMode === STATES.CHARGING) {\n      setAnimState(getAnimState(STATES.CHARGING));\n      setStatusText(\"Lader\");\n      setDisabled(false);\n    } else if (operatingMode === STATES.NOCARCONNECTED) {\n      setStatusText(\"Bil ikke tilkoblet\");\n      setAnimState(getAnimState(STATES.NOCARCONNECTED));\n      setDisabled(true);\n    } else if (operatingMode === STATES.ERROR) {\n      setStatusText(\"Det oppstod en feil\");\n      setAnimState(getAnimState(STATES.ERROR));\n      setDisabled(true);\n    }\n  }, [operatingMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [waiting ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"right\",\n        position: \"absolute\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingIco,\n        style: {\n          width: \"1em\",\n          height: \"1em\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, _this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"startButton\",\n      onClick: function onClick() {\n        return _onClick();\n      },\n      className: \"round \".concat(animState, \" chargerStatus\"),\n      disabled: disabled,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChargerButton, \"rLlyIb3MmVQKp0fFq/NIAOgJUg4=\");\n\n_c = ChargerButton;\nexport default ChargerButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChargerButton\");","map":{"version":3,"sources":["C:/Users/Svennærn/Desktop/laddel-mvp/frontend/src/components/ChargerButton.js"],"names":["React","useRef","useState","useEffect","STATES","getAnimState","loadingIco","login","ChargerButton","operatingMode","onClick","waiting","WAITING","animState","setAnimState","statusText","setStatusText","disabled","setDisabled","console","log","OFFLINE","CARCONNECTED","CHARGING","NOCARCONNECTED","ERROR","float","position","width","height"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react'\r\nimport {useState, useEffect} from \"react\";\r\n\r\nimport '../stylesheets/ChargerButton.css'\r\nimport { STATES, getAnimState } from \"../misc/constants\";\r\nimport loadingIco from '../media/loading.gif';\r\nimport {login} from \"../services/user/userService\";\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * Start/stop button for Charger\r\n *\r\n * @component\r\n */\r\n\r\nconst ChargerButton = ({operatingMode, onClick, waiting}) => {\r\n\r\n    const [animState, setAnimState] = useState(getAnimState(STATES.WAITING));\r\n    const [statusText, setStatusText] = useState(\"Venter på svar\");\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(waiting);\r\n        /**\r\n         * UseEffect listens to props.chargingState and updates ChargerButton based on that.\r\n         *\r\n         * @param {props.chargingState} int Status of charger\r\n         * @memberOf ChargerButton\r\n         */\r\n\r\n        if (operatingMode === STATES.OFFLINE) {\r\n            setAnimState(getAnimState(STATES.OFFLINE));\r\n            setStatusText(\"Laderen er ikke på nett\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        if (operatingMode === STATES.WAITING ){\r\n            setAnimState(getAnimState(STATES.WAITING));\r\n            setStatusText(\"Venter på svar\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        else if (operatingMode === STATES.CARCONNECTED) {\r\n            setAnimState(getAnimState(STATES.CARCONNECTED));\r\n            setStatusText(\"Tilkoblet, start lading\");\r\n            setDisabled(false);\r\n        }\r\n\r\n        else if (operatingMode === STATES.CHARGING) {\r\n            setAnimState(getAnimState(STATES.CHARGING));\r\n            setStatusText(\"Lader\");\r\n            setDisabled(false);\r\n        }\r\n\r\n        else if (operatingMode === STATES.NOCARCONNECTED) {\r\n            setStatusText(\"Bil ikke tilkoblet\");\r\n            setAnimState(getAnimState(STATES.NOCARCONNECTED));\r\n            setDisabled(true);\r\n        }\r\n        else if(operatingMode === STATES.ERROR) {\r\n            setStatusText(\"Det oppstod en feil\");\r\n            setAnimState(getAnimState(STATES.ERROR));\r\n            setDisabled(true);\r\n        }\r\n    }, [operatingMode]);\r\n\r\n    return (\r\n        <div>\r\n            {waiting ?\r\n                <div style={{float: \"right\", position: \"absolute\"}}>\r\n                    <img src={loadingIco} style={{width: \"1em\", height: \"1em\"}}/>\r\n                </div>\r\n            : null}\r\n            <button id=\"startButton\"\r\n                    onClick={() => onClick()}\r\n                    className={`round ${animState} chargerStatus`}\r\n                    disabled={disabled}>\r\n                <h4>{statusText}</h4>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChargerButton;"]},"metadata":{},"sourceType":"module"}