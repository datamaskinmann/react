{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { doPostAsync, doGetAsync } from \"../api\";\nimport { ip, tomcatPort } from \"../../misc/constants\"; //kanskje ikke nødvendig?\n\n/**\r\n * @author Sven\r\n * Klassen skal returnere status på lader\r\n *\r\n * @param {string} chargerId ID til lader\r\n * @param callback\r\n * @returns {Promise<void>}\r\n */\n\nvar getChargerState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(chargerId) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return doPostAsync(\"http://\".concat(ip, \":\").concat(tomcatPort, \"/OperatingMode\"), {\n              chargerID: chargerId.toString()\n            }, {\n              \"Content-Type\": \"text/plain\"\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getChargerState(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { getChargerState };","map":{"version":3,"sources":["C:/Users/Svennærn/Desktop/laddel-mvp/frontend/src/services/charger/checkChargerStateService.js"],"names":["doPostAsync","doGetAsync","ip","tomcatPort","getChargerState","chargerId","chargerID","toString"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAuC,QAAvC;AACA,SAAQC,EAAR,EAAYC,UAAZ,QAA6B,sBAA7B,C,CAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe;AAAA,sEAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPL,WAAW,kBAAWE,EAAX,cAAiBC,UAAjB,qBACpB;AAACG,cAAAA,SAAS,EAAED,SAAS,CAACE,QAAV;AAAZ,aADoB,EACe;AAAC,8BAAgB;AAAjB,aADf,CADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfH,eAAe;AAAA;AAAA;AAAA,GAArB;;AAKA,SAASA,eAAT","sourcesContent":["import { doPostAsync, doGetAsync} from \"../api\";\r\nimport {ip, tomcatPort} from \"../../misc/constants\"; //kanskje ikke nødvendig?\r\n\r\n/**\r\n * @author Sven\r\n * Klassen skal returnere status på lader\r\n *\r\n * @param {string} chargerId ID til lader\r\n * @param callback\r\n * @returns {Promise<void>}\r\n */\r\n\r\nconst getChargerState = async (chargerId) => {\r\n    return await doPostAsync(`http://${ip}:${tomcatPort}/OperatingMode`,\r\n        {chargerID: chargerId.toString()}, {\"Content-Type\": \"text/plain\"});\r\n}\r\n\r\nexport { getChargerState }\r\n"]},"metadata":{},"sourceType":"module"}