{"ast":null,"code":"import { doPostAsync } from \"../api\";\nimport authHeader from \"../user/auth-header\";\nimport { ip, tomcatPort } from '../../misc/constants';\n\nvar getChargerState = function getChargerState(id) {\n  return new Promise(function (resolve, reject) {\n    return doPostAsync(\"\".concat(ip, \":\").concat(tomcatPort, \"/getOperatingMode\"), {\n      id: id\n    }, authHeader()).then(function (x) {\n      resolve(x.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n};\n\nexport default getChargerState;","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/services/charger/getChargerStateService.js"],"names":["doPostAsync","authHeader","ip","tomcatPort","getChargerState","id","Promise","resolve","reject","then","x","data","catch","error"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,QAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,EAAR,EAAYC,UAAZ,QAA6B,sBAA7B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAQ;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WACfR,WAAW,WAAIE,EAAJ,cAAUC,UAAV,wBAAyC;AAACE,MAAAA,EAAE,EAAEA;AAAL,KAAzC,EAAmDJ,UAAU,EAA7D,CAAX,CAA4EQ,IAA5E,CAAiF,UAAAC,CAAC,EAAI;AAClFH,MAAAA,OAAO,CAACG,CAAC,CAACC,IAAH,CAAP;AACH,KAFD,EAEGC,KAFH,CAES,UAACC,KAAD,EAAW;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KAJD,CADe;AAAA,GAAZ,CAAP;AAMH,CAPD;;AASA,eAAeT,eAAf","sourcesContent":["import {doPostAsync} from \"../api\";\r\nimport authHeader from \"../user/auth-header\";\r\nimport {ip, tomcatPort} from '../../misc/constants';\r\n\r\nconst getChargerState = (id) => {\r\n    return new Promise((resolve, reject) =>\r\n        doPostAsync(`${ip}:${tomcatPort}/getOperatingMode`, {id: id}, authHeader()).then(x => {\r\n            resolve(x.data);\r\n        }).catch((error) => {\r\n            reject(error);\r\n        }));\r\n}\r\n\r\nexport default getChargerState;"]},"metadata":{},"sourceType":"module"}