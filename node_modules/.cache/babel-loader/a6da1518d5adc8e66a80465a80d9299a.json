{"ast":null,"code":"import _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\ChargerButton.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport '../stylesheets/ChargerButton.css';\nimport { STATES, getAnimState } from \"../misc/constants\";\nimport { login } from \"../services/user/userService\";\n/**\r\n * @author Magnus & Sven\r\n * Start/stop button for Charger\r\n *\r\n * @component\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChargerButton = function ChargerButton(_ref) {\n  _s();\n\n  var operatingMode = _ref.operatingMode,\n      _onClick = _ref.onClick;\n\n  var _useState = useState(getAnimState(STATES.WAITING)),\n      _useState2 = _slicedToArray(_useState, 2),\n      animState = _useState2[0],\n      setAnimState = _useState2[1];\n\n  var _useState3 = useState(\"Venter på svar\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statusText = _useState4[0],\n      setStatusText = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disabled = _useState6[0],\n      setDisabled = _useState6[1];\n\n  useEffect(function () {\n    /**\r\n     * UseEffect listens to props.chargingState and updates ChargerButton based on that.\r\n     *\r\n     * @param {props.chargingState} int Status of charger\r\n     * @memberOf ChargerButton\r\n     */\n    if (operatingMode === STATES.OFFLINE) {\n      setAnimState(getAnimState(STATES.OFFLINE));\n      setStatusText(\"Laderen er ikke på nett\");\n      setDisabled(true);\n    }\n\n    if (operatingMode === STATES.WAITING) {\n      setAnimState(getAnimState(STATES.WAITING));\n      setStatusText(\"Venter på svar\");\n      setDisabled(true);\n    } else if (operatingMode === STATES.CARCONNECTED) {\n      setAnimState(getAnimState(STATES.CARCONNECTED));\n      setStatusText(\"Tilkoblet, start lading\");\n      setDisabled(false);\n    } else if (operatingMode === STATES.CHARGING) {\n      setAnimState(getAnimState(STATES.CHARGING));\n      setStatusText(\"Lader\");\n      setDisabled(false);\n    } else if (operatingMode === STATES.NOCARCONNECTED) {\n      setStatusText(\"Bil ikke tilkoblet\");\n      setAnimState(getAnimState(STATES.NOCARCONNECTED));\n      setDisabled(true);\n    } else if (operatingMode === STATES.ERROR) {\n      setStatusText(\"Det oppstod en feil\");\n      setAnimState(getAnimState(STATES.ERROR));\n      setDisabled(true);\n    }\n  }, [operatingMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"startButton\",\n      onClick: function onClick() {\n        return _onClick();\n      },\n      className: \"round \".concat(animState, \" chargerStatus\"),\n      disabled: disabled,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChargerButton, \"rLlyIb3MmVQKp0fFq/NIAOgJUg4=\");\n\n_c = ChargerButton;\nexport default ChargerButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChargerButton\");","map":{"version":3,"sources":["C:/Users/Svennærn/Desktop/laddel-mvp/frontend/src/components/ChargerButton.js"],"names":["React","useState","useEffect","STATES","getAnimState","login","ChargerButton","operatingMode","onClick","WAITING","animState","setAnimState","statusText","setStatusText","disabled","setDisabled","OFFLINE","CARCONNECTED","CHARGING","NOCARCONNECTED","ERROR"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from \"react\";\r\n\r\nimport '../stylesheets/ChargerButton.css'\r\nimport { STATES, getAnimState } from \"../misc/constants\";\r\nimport {login} from \"../services/user/userService\";\r\n\r\n/**\r\n * @author Magnus & Sven\r\n * Start/stop button for Charger\r\n *\r\n * @component\r\n */\r\n\r\nconst ChargerButton = ({operatingMode, onClick}) => {\r\n\r\n    const [animState, setAnimState] = useState(getAnimState(STATES.WAITING));\r\n    const [statusText, setStatusText] = useState(\"Venter på svar\");\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        /**\r\n         * UseEffect listens to props.chargingState and updates ChargerButton based on that.\r\n         *\r\n         * @param {props.chargingState} int Status of charger\r\n         * @memberOf ChargerButton\r\n         */\r\n\r\n        if (operatingMode === STATES.OFFLINE) {\r\n            setAnimState(getAnimState(STATES.OFFLINE));\r\n            setStatusText(\"Laderen er ikke på nett\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        if (operatingMode === STATES.WAITING ){\r\n            setAnimState(getAnimState(STATES.WAITING));\r\n            setStatusText(\"Venter på svar\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        else if (operatingMode === STATES.CARCONNECTED) {\r\n            setAnimState(getAnimState(STATES.CARCONNECTED));\r\n            setStatusText(\"Tilkoblet, start lading\");\r\n            setDisabled(false);\r\n        }\r\n\r\n        else if (operatingMode === STATES.CHARGING) {\r\n            setAnimState(getAnimState(STATES.CHARGING));\r\n            setStatusText(\"Lader\");\r\n            setDisabled(false);\r\n        }\r\n\r\n        else if (operatingMode === STATES.NOCARCONNECTED) {\r\n            setStatusText(\"Bil ikke tilkoblet\");\r\n            setAnimState(getAnimState(STATES.NOCARCONNECTED));\r\n            setDisabled(true);\r\n        }\r\n        else if(operatingMode === STATES.ERROR) {\r\n            setStatusText(\"Det oppstod en feil\");\r\n            setAnimState(getAnimState(STATES.ERROR));\r\n            setDisabled(true);\r\n        }\r\n    }, [operatingMode]);\r\n\r\n    return (\r\n        <div>\r\n            <button id=\"startButton\"\r\n                    onClick={() => onClick()}\r\n                    className={`round ${animState} chargerStatus`}\r\n                    disabled={disabled}>\r\n                <h4>{statusText}</h4>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChargerButton;"]},"metadata":{},"sourceType":"module"}