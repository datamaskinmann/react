{"ast":null,"code":"import _objectSpread from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ACTION_TYPES } from \"../actions/sessionActions\";\nvar initState = {\n  session: null,\n  isLoading: false,\n  loaded: false,\n  fetchError: null,\n  isActive: false,\n  isPending: false\n};\n/**\r\n * @author Magnus\r\n * @version 06/08/2021\r\n * Method for updating session state\r\n * @param state - initial state\r\n * @param action - JavaScript-object w. action type and payload\r\n * @return state - updated state\r\n */\n\nvar sessionReducer = function sessionReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload;\n\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_SESSION_PENDING:\n      console.log(\"fetching session...\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        loaded: false,\n        fetchError: null,\n        isActive: false,\n        isPending: false\n      });\n\n    case ACTION_TYPES.FETCH_ACTIVE_SUCCESS:\n      console.log(\"success\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        session: payload,\n        isLoading: false,\n        loaded: true,\n        fetchError: null,\n        isActive: true,\n        isPending: false\n      });\n\n    case ACTION_TYPES.FETCH_ACTIVE_FAILURE:\n      console.log(\"failed\");\n\n      if (payload.response.status === 404) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          session: null,\n          isLoading: false,\n          loaded: true,\n          fetchError: null,\n          isActive: false,\n          isPending: false\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        session: null,\n        isLoading: false,\n        loaded: true,\n        fetchError: payload,\n        isActive: false,\n        isPending: false\n      });\n\n    case ACTION_TYPES.FETCH_PENDING_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        session: payload.data,\n        isLoading: false,\n        loaded: true,\n        fetchError: null,\n        isActive: false,\n        isPending: true\n      });\n\n    case ACTION_TYPES.FETCH_PENDING_FAILURE:\n      if (payload.response.status == 404) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          session: null,\n          isLoading: false,\n          loaded: true,\n          fetchError: null,\n          isActive: false,\n          isPending: false\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        session: null,\n        isLoading: false,\n        loaded: true,\n        fetchError: payload,\n        isActive: false,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/reducers/sessionReducer.js"],"names":["ACTION_TYPES","initState","session","isLoading","loaded","fetchError","isActive","isPending","sessionReducer","state","action","payload","type","FETCH_SESSION_PENDING","console","log","FETCH_ACTIVE_SUCCESS","FETCH_ACTIVE_FAILURE","response","status","FETCH_PENDING_SUCCESS","data","FETCH_PENDING_FAILURE"],"mappings":"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","sourcesContent":["import { ACTION_TYPES } from \"../actions/sessionActions\";\r\n\r\nconst initState = {\r\n    session: null,\r\n    isLoading: false,\r\n    loaded: false,\r\n    fetchError: null,\r\n    isActive: false,\r\n    isPending: false\r\n}\r\n\r\n/**\r\n * @author Magnus\r\n * @version 06/08/2021\r\n * Method for updating session state\r\n * @param state - initial state\r\n * @param action - JavaScript-object w. action type and payload\r\n * @return state - updated state\r\n */\r\n\r\nconst sessionReducer = (state = initState, action) => {\r\n    const payload = action.payload;\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_SESSION_PENDING:\r\n            console.log(\"fetching session...\");\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                loaded: false,\r\n                fetchError: null,\r\n                isActive: false,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_ACTIVE_SUCCESS:\r\n            console.log(\"success\");\r\n            return {\r\n                ...state,\r\n                session: payload,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: null,\r\n                isActive: true,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_ACTIVE_FAILURE:\r\n            console.log(\"failed\");\r\n            if (payload.response.status === 404) {\r\n                return {\r\n                    ...state,\r\n                    session: null,\r\n                    isLoading: false,\r\n                    loaded: true,\r\n                    fetchError: null,\r\n                    isActive: false,\r\n                    isPending: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                session: null,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: payload,\r\n                isActive: false,\r\n                isPending: false\r\n            };\r\n        case ACTION_TYPES.FETCH_PENDING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                session: payload.data,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: null,\r\n                isActive: false,\r\n                isPending: true\r\n            }\r\n        case ACTION_TYPES.FETCH_PENDING_FAILURE:\r\n            if (payload.response.status == 404) {\r\n                return {\r\n                    ...state,\r\n                    session: null,\r\n                    isLoading: false,\r\n                    loaded: true,\r\n                    fetchError: null,\r\n                    isActive: false,\r\n                    isPending: false\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                session: null,\r\n                isLoading: false,\r\n                loaded: true,\r\n                fetchError: payload,\r\n                isActive: false,\r\n                isPending: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default sessionReducer;\r\n"]},"metadata":{},"sourceType":"module"}