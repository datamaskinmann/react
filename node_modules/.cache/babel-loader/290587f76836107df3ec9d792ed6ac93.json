{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { doPostAsync } from \"../api\";\nimport { ip, tomcatPort } from \"../../misc/constants\";\nimport authHeader from \"../user/auth-header\";\nvar URL = \"http://\".concat(ip, \":\").concat(tomcatPort, \"/api/charger\");\n\nvar fetchSession = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              return doPostAsync(\"\".concat(URL, \"/getCurrentChargerSession\"), null, authHeader()).then(function (x) {\n                resolve(x.data);\n              }).catch(function (error) {\n                reject(error);\n              });\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchSession() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { fetchSession };","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/services/charger/fetchSessionService.js"],"names":["doPostAsync","ip","tomcatPort","authHeader","URL","fetchSession","Promise","resolve","reject","then","x","data","catch","error"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,QAA1B;AACA,SAAQC,EAAR,EAAYC,UAAZ,QAA6B,sBAA7B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAMC,GAAG,oBAAaH,EAAb,cAAmBC,UAAnB,iBAAT;;AAEA,IAAMG,YAAY;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CACV,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBACfR,WAAW,WAAII,GAAJ,gCAAoC,IAApC,EAA0CD,UAAU,EAApD,CAAX,CAAmEM,IAAnE,CAAwE,UAAAC,CAAC,EAAI;AACzEH,gBAAAA,OAAO,CAACG,CAAC,CAACC,IAAH,CAAP;AACH,eAFD,EAEGC,KAFH,CAES,UAACC,KAAD,EAAW;AAChBL,gBAAAA,MAAM,CAACK,KAAD,CAAN;AACH,eAJD,CADe;AAAA,aAAZ,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZR,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAUA,SAASA,YAAT","sourcesContent":["import {doPostAsync} from \"../api\";\r\nimport {ip, tomcatPort} from \"../../misc/constants\";\r\nimport authHeader from \"../user/auth-header\";\r\n\r\nconst URL = `http://${ip}:${tomcatPort}/api/charger`;\r\n\r\nconst fetchSession = async () => {\r\n    return new Promise((resolve, reject) =>\r\n        doPostAsync(`${URL}/getCurrentChargerSession`, null, authHeader()).then(x => {\r\n            resolve(x.data);\r\n        }).catch((error) => {\r\n            reject(error);\r\n        }));\r\n\r\n};\r\n\r\nexport { fetchSession };"]},"metadata":{},"sourceType":"module"}