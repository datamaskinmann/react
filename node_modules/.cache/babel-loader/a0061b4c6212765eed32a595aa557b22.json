{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Svenn\\xE6rn\\\\Desktop\\\\laddel-mvp\\\\frontend\\\\src\\\\components\\\\TimeSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TimeSelector = function TimeSelector() {\n  _s();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(date.getHours()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectdHour = _useState4[0],\n      setSelectedHour = _useState4[1];\n\n  var pollTime = setInterval(function () {\n    var curDate = new Date();\n\n    if (curDate.getMinutes() !== date.getMinutes()) {\n      clearInterval(pollTime);\n      setDate(new Date());\n    }\n  }, 1000);\n  useEffect(function () {\n    return function () {\n      clearInterval(pollTime);\n    };\n  }, []);\n  useEffect(function () {\n    var isMounted = true;\n\n    if (isMounted) {\n      console.log(\"Hei\");\n    }\n  }, [selectdHour]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        setSelectedHour(e.target.value);\n      },\n      style: {\n        width: \"33%\"\n      },\n      name: \"hour\",\n      children: [_toConsumableArray(Array(9).keys()).map(function (hour) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date.getHours() + hour,\n          children: date.getHours() + hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, _this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"inline-block\",\n        marginLeft: \"3%\",\n        marginRight: \"3%\"\n      },\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        width: \"33%\"\n      },\n      name: \"minute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeSelector, \"n0cFR/bbB5OQrWku6Dr0/wS5SrM=\");\n\n_c = TimeSelector;\nexport default TimeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeSelector\");","map":{"version":3,"sources":["C:/Users/SvennÃ¦rn/Desktop/laddel-mvp/frontend/src/components/TimeSelector.js"],"names":["React","useEffect","useRef","useState","TimeSelector","Date","date","setDate","getHours","selectdHour","setSelectedHour","pollTime","setInterval","curDate","getMinutes","clearInterval","isMounted","console","log","e","target","value","width","Array","keys","map","hour","display","marginLeft","marginRight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAEvB,kBAAwBD,QAAQ,CAAC,IAAIE,IAAJ,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAuCJ,QAAQ,CAACG,IAAI,CAACE,QAAL,EAAD,CAA/C;AAAA;AAAA,MAAOC,WAAP;AAAA,MAAoBC,eAApB;;AAEA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC/B,QAAMC,OAAO,GAAG,IAAIR,IAAJ,EAAhB;;AACA,QAAIQ,OAAO,CAACC,UAAR,OAAyBR,IAAI,CAACQ,UAAL,EAA7B,EAAgD;AAC5CC,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACAJ,MAAAA,OAAO,CAAC,IAAIF,IAAJ,EAAD,CAAP;AACH;AACJ,GAN2B,EAMzB,IANyB,CAA5B;AASAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAQ,YAAM;AACVc,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIe,SAAS,GAAG,IAAhB;;AAEA,QAAGA,SAAH,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ,GANQ,EAMN,CAACT,WAAD,CANM,CAAT;AAQA,sBACI;AAAA,4BACI;AAAQ,MAAA,QAAQ,EAAE,kBAACU,CAAD,EAAO;AACrBT,QAAAA,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,OAFD;AAEG,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAFV;AAE0B,MAAA,IAAI,EAAC,MAF/B;AAAA,iBAGK,mBAAIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAACC,IAAD,EAAU;AAChC,4BACI;AAAQ,UAAA,KAAK,EAAEpB,IAAI,CAACE,QAAL,KAAkBkB,IAAjC;AAAA,oBAAwCpB,IAAI,CAACE,QAAL,KAAkBkB;AAA1D;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAUI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,cAAV;AAA0BC,QAAAA,UAAU,EAAE,IAAtC;AAA4CC,QAAAA,WAAW,EAAE;AAAzD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,eAWI;AAAQ,MAAA,KAAK,EAAE;AAACP,QAAAA,KAAK,EAAE;AAAR,OAAf;AAA+B,MAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CA5CD;;GAAMlB,Y;;KAAAA,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nconst TimeSelector = () => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [selectdHour, setSelectedHour] = useState(date.getHours());\r\n\r\n    const pollTime = setInterval(() => {\r\n        const curDate = new Date();\r\n        if (curDate.getMinutes() !== date.getMinutes()) {\r\n            clearInterval(pollTime);\r\n            setDate(new Date());\r\n        }\r\n    }, 1000);\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            clearInterval(pollTime);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n\r\n        if(isMounted) {\r\n            console.log(\"Hei\");\r\n        }\r\n    }, [selectdHour]);\r\n\r\n    return (\r\n        <div>\r\n            <select onChange={(e) => {\r\n                setSelectedHour(e.target.value)\r\n            }} style={{width: \"33%\"}} name=\"hour\">\r\n                {[...Array(9).keys()].map((hour) => {\r\n                    return (\r\n                        <option value={date.getHours() + hour}>{date.getHours() + hour}</option>\r\n                    )\r\n                })};\r\n            </select>\r\n            <h3 style={{display: \"inline-block\", marginLeft: \"3%\", marginRight: \"3%\"}}>:</h3>\r\n            <select style={{width: \"33%\"}} name=\"minute\">\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeSelector;"]},"metadata":{},"sourceType":"module"}