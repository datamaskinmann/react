{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Svenn\\xE6rn/Desktop/laddel-mvp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { doPostAsync } from \"../api\";\nimport { ip, tomcatPort } from \"../../misc/constants\";\n/**\r\n * @author Sven\r\n * Service that communicates with the backend to start a charger\r\n * @version 09/08/2021\r\n *\r\n */\n\n/**\r\n * Starts a charger\r\n * @param id the charger's id\r\n * @returns {Promise<void>}\r\n */\n\nvar StartCharger = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return doPostAsync(\"http://\".concat(ip, \":\").concat(tomcatPort, \"/StartCharger\"), {\n              chargerID: id\n            }, {\n              \"Content-Type\": \"text/plain\"\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function StartCharger(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = StartCharger;\nexport { StartCharger };\n\nvar _c;\n\n$RefreshReg$(_c, \"StartCharger\");","map":{"version":3,"sources":["C:/Users/Svenn√¶rn/Desktop/laddel-mvp/frontend/src/services/charger/startChargingService.js"],"names":["doPostAsync","ip","tomcatPort","StartCharger","id","chargerID"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,SAASC,EAAT,EAAaC,UAAb,QAA+B,sBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdJ,WAAW,kBAAWC,EAAX,cAAiBC,UAAjB,oBACV;AAACG,cAAAA,SAAS,EAAED;AAAZ,aADU,EACO;AAAC,8BAAgB;AAAjB,aADP,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZD,YAAY;AAAA;AAAA;AAAA,GAAlB;;KAAMA,Y;AAKN,SAAQA,YAAR","sourcesContent":["import { doPostAsync } from \"../api\";\r\nimport { ip, tomcatPort } from \"../../misc/constants\";\r\n\r\n/**\r\n * @author Sven\r\n * Service that communicates with the backend to start a charger\r\n * @version 09/08/2021\r\n *\r\n */\r\n\r\n/**\r\n * Starts a charger\r\n * @param id the charger's id\r\n * @returns {Promise<void>}\r\n */\r\nconst StartCharger = async (id) => {\r\n await doPostAsync(`http://${ip}:${tomcatPort}/StartCharger`,\r\n        {chargerID: id}, {\"Content-Type\": \"text/plain\"});\r\n}\r\n\r\nexport {StartCharger};"]},"metadata":{},"sourceType":"module"}